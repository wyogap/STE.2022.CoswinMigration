CALL MIGRATION.STE_START_PATCH('20250804-QTY-1PCT-DIFFERENCE');

-- NEED TO BRING TABLE MAXIMO.CSWN_PRLINE FROM ON-PREM
-- NEED TO BRING TABLE MAXIMO.CSWN_RFQLINE FROM ON-PREM
-- NEED TO BRING TABLE MAXIMO.CSWN_POLINE FROM ON-PREM
-- NEED TO BRING TABLE MAXIMO.CSWN_INVOICELINE FROM ON-PREM
-- NEED TO BRING TABLE MAXIMO.CSWN_INVUSELINE FROM ON-PREM

-- BACKUP: PRLINE
DROP TABLE "MIGRATION"."BAK_20250804_PRLINE" IF EXISTS;
CREATE TABLE "MIGRATION"."BAK_20250804_PRLINE"  (
  "PRLINEID" BIGINT NOT NULL , 
  "PRNUM" VARCHAR(10 OCTETS) , 
  "PRLINENUM" INTEGER , 
  "ITEMNUM" VARCHAR(30 OCTETS) , 
  "ORDERQTY" DECIMAL(18,2) , 
  "NEW_ORDERQTY" DECIMAL(18,2)
)   
ORGANIZE BY ROW;

INSERT INTO "MIGRATION"."BAK_20250804_PRLINE" (
	PRLINEID, PRNUM, PRLINENUM, ITEMNUM, ORDERQTY, NEW_ORDERQTY
)
SELECT A.PRLINEID, A.PRNUM, A.PRLINENUM, A.ITEMNUM, A.ORDERQTY, B.PR_QTY
FROM MAXIMO.PRLINE A
JOIN MAXIMO.CSWN_PRLINE B ON B.PK_PR_ITEMS=A.STE_MIGRATIONID
WHERE A.ORDERQTY!=B.PR_QTY AND ABS(A.ORDERQTY-B.PR_QTY)<1
;

-- BACKUP: QUOTATIONLINE
DROP TABLE "MIGRATION"."BAK_20250804_QUOTATIONLINE" IF EXISTS;
CREATE TABLE "MIGRATION"."BAK_20250804_QUOTATIONLINE"  (
  "QUOTATIONLINEID" BIGINT NOT NULL , 
  "RFQNUM" VARCHAR(15 OCTETS) , 
  "RFQLINENUM" INTEGER , 
  "ITEMNUM" VARCHAR(30 OCTETS) , 
  "VENDOR" VARCHAR(20 OCTETS) , 
  "ORDERQTY" DECIMAL(18,2) , 
  "NEW_ORDERQTY" DECIMAL(18,2)
)   
ORGANIZE BY ROW;

INSERT INTO "MIGRATION"."BAK_20250804_QUOTATIONLINE" (
	QUOTATIONLINEID, RFQNUM, RFQLINENUM, ITEMNUM, VENDOR, ORDERQTY, NEW_ORDERQTY
)
SELECT A.QUOTATIONLINEID, A.RFQNUM, A.RFQLINENUM, A.ITEMNUM, A.VENDOR, A.ORDERQTY, ROUND(B.DV_QTY, 2) AS DV_QTY
FROM MAXIMO.QUOTATIONLINE A
JOIN MAXIMO.CSWN_RFQLINE B ON B.PK_DV_ITEMS=A.STE_MIGRATIONID
WHERE A.ORDERQTY!=ROUND(B.DV_QTY, 2) AND ABS(A.ORDERQTY-ROUND(B.DV_QTY, 2))<1
;

-- BACKUP: INVOICELINE
DROP TABLE "MIGRATION"."BAK_20250804_INVOICELINE" IF EXISTS;
CREATE TABLE "MIGRATION"."BAK_20250804_INVOICELINE"  (
  "INVOICELINEID" BIGINT NOT NULL , 
  "INVOICENUM" VARCHAR(15 OCTETS) , 
  "INVOICELINENUM" INTEGER , 
  "ITEMNUM" VARCHAR(30 OCTETS) , 
  "INVOICEQTY" DECIMAL(18,2) , 
  "NEW_INVOICEQTY" DECIMAL(18,2)
)   
ORGANIZE BY ROW;

INSERT INTO TABLE "MIGRATION"."BAK_20250804_INVOICELINE" (
	INVOICELINEID, INVOICENUM, INVOICELINENUM, ITEMNUM, INVOICEQTY, NEW_INVOICEQTY
)
SELECT A.INVOICELINEID, A.INVOICENUM, A.INVOICELINENUM, A.ITEMNUM, A.INVOICEQTY, B.INV_QTY
FROM MAXIMO.INVOICELINE A
JOIN MAXIMO.CSWN_INVOICELINE B ON B.PK_INV_ITEMS=A.STE_MIGRATIONID
WHERE A.INVOICEQTY!=B.INV_QTY AND ABS(A.INVOICEQTY-B.INV_QTY)<1;

-- BACKUP: INVUSELINE
DROP TABLE "MIGRATION"."BAK_20250804_INVUSELINE" IF EXISTS;
CREATE TABLE "MIGRATION"."BAK_20250804_INVUSELINE"  (
  "INVUSELINEID" BIGINT NOT NULL , 
  "INVUSENUM" VARCHAR(10 OCTETS) , 
  "INVUSELINENUM" INTEGER , 
  "ITEMNUM" VARCHAR(30 OCTETS) , 
  "QUANTITY" DECIMAL(18,2) , 
  "NEW_QUANTITY" DECIMAL(18,2)
)   
ORGANIZE BY ROW;

INSERT INTO TABLE "MIGRATION"."BAK_20250804_INVUSELINE" (
	INVUSELINEID, INVUSENUM, INVUSELINENUM, ITEMNUM, QUANTITY, NEW_QUANTITY
)
SELECT A.INVUSELINEID, A.INVUSENUM, A.INVUSELINENUM, A.ITEMNUM, A.QUANTITY, B.ISS_QTY
FROM MAXIMO.INVUSELINE A
JOIN MAXIMO.CSWN_INVUSELINE B ON B.PK_ISS_ITEMS=A.STE_MIGRATIONID
WHERE A.QUANTITY!=B.ISS_QTY AND ABS(A.QUANTITY-B.ISS_QTY)<1;

-- BACKUP: MATUSETRANS
DROP TABLE "MIGRATION"."BAK_20250804_MATUSETRANS" IF EXISTS;
CREATE TABLE "MIGRATION"."BAK_20250804_MATUSETRANS"  (
  "MATUSETRANSID" BIGINT NOT NULL , 
  "INVUSEID" BIGINT , 
  "INVUSELINEID" BIGINT , 
  "QUANTITY" DECIMAL(18,2) , 
  "NEW_QUANTITY" DECIMAL(18,2)
)   
ORGANIZE BY ROW;

INSERT INTO TABLE "MIGRATION"."BAK_20250804_MATUSETRANS" (
	MATUSETRANSID, INVUSEID, INVUSELINEID, QUANTITY, NEW_QUANTITY
)
SELECT A.MATUSETRANSID, A.INVUSEID, A.INVUSELINEID, A.QUANTITY, (-1 * B.ISS_QTY) AS ISS_QTY
FROM MAXIMO.MATUSETRANS A
JOIN MAXIMO.CSWN_INVUSELINE B ON B.PK_ISS_ITEMS=A.STE_MIGRATIONID
WHERE 1=1
	AND A.ISSUETYPE='ISSUE'
	AND A.QUANTITY!=(-1*B.ISS_QTY) AND ABS(A.QUANTITY-(-1*B.ISS_QTY))<1;

-- CONTRACTLINE
-- FOR CONTRACTTYPE='PRICE' => NO NEED BECAUSE ORDERQTY IS ALWAYS =1
-- FOR CONTRACTTYPE='BLANKET' => NO NEED BECAUSE ORDERQTY IS ALWAYS =1

-- PRLINE
MERGE INTO MAXIMO.PRLINE A
USING (
	SELECT A.PRLINEID, A.PRNUM, A.PRLINENUM, A.ITEMNUM, A.ORDERQTY, B.PR_QTY
	FROM MAXIMO.PRLINE A
	JOIN MAXIMO.CSWN_PRLINE B ON B.PK_PR_ITEMS=A.STE_MIGRATIONID
	WHERE A.ORDERQTY!=B.PR_QTY AND ABS(A.ORDERQTY-B.PR_QTY)<1
) B ON B.PRLINEID=A.PRLINEID
WHEN MATCHED THEN
UPDATE SET
	ORDERTYPE = B.PR_QTY
;

-- POLINE => NO DISCREPANCIES
-- TODO: TO CONFIRM THE VALUE OF ORDERQTY FOR PONUM AA10016776

-- RFQLINE => NO NEED TO CHECK, NOT IMPORTANT (THE IMPORTANT QTY ARE PRLINE, QUOTATIONLINE AND POLINE)

-- QUOTATIONLINE
-- TODO: TO CONFIRM ORDERQTY FOR RFNUM SO04605825000 (PENTALIGHTING65EESGD)
MERGE INTO MAXIMO.QUOTATIONLINE A
USING (
	SELECT A.QUOTATIONLINEID, A.RFQNUM, A.RFQLINENUM, A.ITEMNUM, A.VENDOR, A.ORDERQTY, ROUND(B.DV_QTY, 2) AS DV_QTY
	FROM MAXIMO.QUOTATIONLINE A
	JOIN MAXIMO.CSWN_RFQLINE B ON B.PK_DV_ITEMS=A.STE_MIGRATIONID
	WHERE A.ORDERQTY!=ROUND(B.DV_QTY, 2) AND ABS(A.ORDERQTY-ROUND(B.DV_QTY, 2))<1
) B ON B.QUOTATIONLINEID=A.QUOTATIONLINEID
WHEN MATCHED THEN
UPDATE SET
	ORDERQTY = B.DV_QTY
;

-- INVOICELINE
MERGE INTO MAXIMO.INVOICELINE A
USING (
	SELECT A.INVOICELINEID, A.INVOICENUM, A.INVOICELINENUM, A.ITEMNUM, A.INVOICEQTY, B.INV_QTY
	FROM MAXIMO.INVOICELINE A
	JOIN MAXIMO.CSWN_INVOICELINE B ON B.PK_INV_ITEMS=A.STE_MIGRATIONID
	WHERE A.INVOICEQTY!=B.INV_QTY AND ABS(A.INVOICEQTY-B.INV_QTY)<1
) B ON B.INVOICELINEID=A.INVOICELINEID
WHEN MATCHED THEN
UPDATE SET
	INVOICEQTY = B.INV_QTY
;

-- INVUSELINE
-- TODO: TO CONFIRM QTY FOR INVUSENUM 332535
MERGE INTO MAXIMO.INVUSELINE A
USING (
	SELECT A.INVUSELINEID, A.INVUSENUM, A.INVUSELINENUM, A.ITEMNUM, A.QUANTITY, B.ISS_QTY
	FROM MAXIMO.INVUSELINE A
	JOIN MAXIMO.CSWN_INVUSELINE B ON B.PK_ISS_ITEMS=A.STE_MIGRATIONID
	WHERE A.QUANTITY!=B.ISS_QTY AND ABS(A.QUANTITY-B.ISS_QTY)<1
) B ON B.INVUSELINEID = A.INVUSELINEID
WHEN MATCHED THEN
UPDATE SET
	QUANTITY = B.ISS_QTY
;

-- MATUSETRANS (SAME SOURCE AS INVUSELINE)
MERGE INTO MAXIMO.MATUSETRANS A
USING (
	SELECT A.MATUSETRANSID, A.INVUSEID, A.INVUSELINEID, A.QUANTITY, (-1 * B.ISS_QTY) AS ISS_QTY
	FROM MAXIMO.MATUSETRANS A
	JOIN MAXIMO.CSWN_INVUSELINE B ON B.PK_ISS_ITEMS=A.STE_MIGRATIONID
	WHERE 1=1
		AND A.ISSUETYPE='ISSUE'
		AND A.QUANTITY!=(-1*B.ISS_QTY) AND ABS(A.QUANTITY-(-1*B.ISS_QTY))<1
) B ON B.MATUSETRANSID=A.MATUSETRANSID
WHEN MATCHED THEN
UPDATE SET
	QUANTITY = B.ISS_QTY
;

-- MATRECTRANS => DONT UPDATE, ALREADY MODIFIED WITH EACH RECEIVE

-- SERVRECTRANS (SAME SOURCE AS MATRECTRANS) => DONT UPDATE, ALREADY MODIFIED WITH EACH RECEIVE

-- WPITEM (SAME SOURCE AS INVUSELINE) => NO DISCREPANCIES

CALL MIGRATION.STE_FINISH_PATCH('20250804-QTY-1PCT-DIFFERENCE');