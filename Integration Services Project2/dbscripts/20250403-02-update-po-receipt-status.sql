-- set receivedqty, linecost, currencylinecost to negative for RETURN transaction
UPDATE MAXIMO.MATRECTRANS
SET
	QUANTITY=CASE WHEN QUANTITY<0 THEN QUANTITY ELSE -1 * QUANTITY END
	, LINECOST=CASE WHEN LINECOST<0 THEN LINECOST ELSE -1 * LINECOST END
	, CURRENCYLINECOST=CASE WHEN CURRENCYLINECOST<0 THEN CURRENCYLINECOST ELSE -1 * CURRENCYLINECOST END
WHERE ISSUETYPE='RETURN' AND STE_MIGRATIONID IS NOT NULL
	--AND ponum='AA10015422'
;

UPDATE MAXIMO.SERVRECTRANS
SET
	QUANTITY=CASE WHEN QUANTITY<0 THEN QUANTITY ELSE -1 * QUANTITY END
	, LINECOST=CASE WHEN LINECOST<0 THEN LINECOST ELSE -1 * LINECOST END
	, CURRENCYLINECOST=CASE WHEN CURRENCYLINECOST<0 THEN CURRENCYLINECOST ELSE -1 * CURRENCYLINECOST END
WHERE ISSUETYPE='RETURN' AND STE_MIGRATIONID IS NOT NULL
;

-- update binnum of RECEIPT transaction (only for PO.STATUS=APPR)
MERGE INTO MAXIMO.MATRECTRANS A
USING (
	SELECT A.MATRECTRANSID, A.TOSTORELOC, A.ITEMNUM, B.BINNUM, B.CURBAL
		, ROW_NUMBER() OVER (PARTITION BY A.MATRECTRANSID, A.TOSTORELOC, A.ITEMNUM ORDER BY B.CURBAL DESC) RN
	FROM MAXIMO.MATRECTRANS A
	JOIN MAXIMO.INVBALANCES B ON B.ITEMNUM=A.ITEMNUM AND B.LOCATION=A.TOSTORELOC
	JOIN MAXIMO.PO C ON C.PONUM=A.PONUM
	WHERE A.STE_MIGRATIONID IS NOT NULL
		AND C.STATUS='APPR'
) B ON B.RN=1 AND B.MATRECTRANSID=A.MATRECTRANSID
WHEN MATCHED THEN
UPDATE SET
	TOBIN=B.BINNUM,
	FROMBIN=NULL
;

-- update actualcost, financialperiod, loadedcost, costinfo
UPDATE MAXIMO.MATRECTRANS
SET
 	ACTUALCOST=UNITCOST,
 	FINANCIALPERIOD=YEAR(ACTUALDATE),
 	LOADEDCOST=LINECOST,
 	COSTINFO=1
WHERE STE_MIGRATIONID IS NOT NULL
;

UPDATE MAXIMO.SERVRECTRANS
SET
 	FINANCIALPERIOD=YEAR(TRANSDATE),
 	LOADEDCOST=LINECOST,
 	COSTINFO=1
WHERE STE_MIGRATIONID IS NOT NULL
;

-- update RECEIPTREF for RETURN transaction
MERGE INTO MAXIMO.MATRECTRANS A
USING (
	SELECT A.matrectransid, A.PONUM, A.ITEMNUM, B.MATRECTRANSID AS RECEIPTREF
		, ROW_NUMBER() OVER (PARTITION BY A.matrectransid ORDER BY B.STE_MIGRATIONID DESC) RN
	FROM MAXIMO.MATRECTRANS A
	JOIN MAXIMO.MATRECTRANS B ON B.ISSUETYPE='RECEIPT'
		AND B.STE_MIGRATIONID<=A.STE_MIGRATIONID AND B.ITEMNUM=A.ITEMNUM AND B.PONUM=A.PONUM
	WHERE A.ISSUETYPE='RETURN'
) B ON B.RN=1 AND B.MATRECTRANSID=A.MATRECTRANSID
WHEN MATCHED THEN
UPDATE SET
	RECEIPTREF=B.RECEIPTREF
;

MERGE INTO MAXIMO.SERVRECTRANS A
USING (
	SELECT A.SERVRECTRANSID, A.PONUM, A.ITEMNUM, B.SERVRECTRANSID AS RECEIPTREF
		, ROW_NUMBER() OVER (PARTITION BY A.SERVRECTRANSID ORDER BY B.STE_MIGRATIONID DESC) RN
	FROM MAXIMO.SERVRECTRANS A
	JOIN MAXIMO.SERVRECTRANS B ON B.ISSUETYPE='RECEIPT'
		AND B.STE_MIGRATIONID<=A.STE_MIGRATIONID AND B.ITEMNUM=A.ITEMNUM AND B.PONUM=A.PONUM
	WHERE A.ISSUETYPE='RETURN'
) B ON B.RN=1 AND B.SERVRECTRANSID=A.SERVRECTRANSID
WHEN MATCHED THEN
UPDATE SET
	RECEIPTREF=B.RECEIPTREF
;

-- TODO: recalculate PO.RECEIPTS status (only for PO.STATUS=APPR)
-- NOTE: need to review the list with customer first
--SELECT A.*
--	, B.ITEMNUM, C.DESCRIPTION
--	, B.ORDERQTY, B.ORDERNUM AS NO_OF_RECEIPTS, B.RECEIVEDQTY
--	, B.ORDERQTY-B.RECEIVEDQTY AS REMAINING
--FROM (
--	SELECT A.PONUM, A.RECEIPTS AS RECEIPTS
--		, CASE WHEN B.MAX_ORDERNUM=0 THEN 'NONE' 
--				  WHEN B.MAX_REMAINING>0 THEN 'PARTIAL' 
--				  ELSE 'COMPLETE' 
--		  END AS CALCULATED_RECEIPTS
--		, A.ORDERDATE, A.STATUS, A.REQUIREDDATE
--	FROM  MAXIMO.PO A 
--	JOIN (
--		SELECT A.PONUM, MAX(ORDERQTY) AS MAX_QUANTITY, MAX(ORDERNUM) AS MAX_ORDERNUM, MAX(A.ORDERQTY-A.RECEIVEDQTY) AS MAX_REMAINING
--		FROM (
--			SELECT A.PONUM, A.ITEMNUM
--				, SUM(C.ORDERQTY) AS ORDERQTY, COUNT(C.ORDERQTY) AS ORDERNUM, SUM(A.QUANTITY) AS RECEIVEDQTY
--			FROM MAXIMO.MATRECTRANS A
--			JOIN MAXIMO.PO B ON B.PONUM=A.PONUM AND B.STATUS='APPR'
--			JOIN MAXIMO.POLINE C ON C.PONUM=A.PONUM AND C.ITEMNUM=A.ITEMNUM
--			--WHERE A.PONUM='BB60009567'
--			GROUP BY A.PONUM, A.ITEMNUM
--			
--			UNION ALL
--			
--			SELECT A.PONUM, A.ITEMNUM
--				, SUM(C.ORDERQTY) AS ORDERQTY, COUNT(C.ORDERQTY) AS ORDERNUM, SUM(A.QUANTITY) AS RECEIVEDQTY
--			FROM MAXIMO.SERVRECTRANS A
--			JOIN MAXIMO.PO B ON B.PONUM=A.PONUM AND B.STATUS='APPR'
--			JOIN MAXIMO.POLINE C ON C.PONUM=A.PONUM AND C.ITEMNUM=A.ITEMNUM
--			--WHERE A.PONUM='BB60009567'
--			GROUP BY A.PONUM, A.ITEMNUM
--		) A
--		GROUP BY A.PONUM
--	) B ON B.PONUM=A.PONUM
--) A 
--JOIN (
--	SELECT A.PONUM, A.ITEMNUM
--		, SUM(C.ORDERQTY) AS ORDERQTY, COUNT(C.ORDERQTY) AS ORDERNUM, SUM(A.QUANTITY) AS RECEIVEDQTY
--	FROM MAXIMO.MATRECTRANS A
--	JOIN MAXIMO.PO B ON B.PONUM=A.PONUM AND B.STATUS='APPR'
--	JOIN MAXIMO.POLINE C ON C.PONUM=A.PONUM AND C.ITEMNUM=A.ITEMNUM
--	--WHERE A.PONUM='BB60009567'
--	GROUP BY A.PONUM, A.ITEMNUM
--	
--	UNION ALL
--	
--	SELECT A.PONUM, A.ITEMNUM
--		, SUM(C.ORDERQTY) AS ORDERQTY, COUNT(C.ORDERQTY) AS ORDERNUM, SUM(A.QUANTITY) AS RECEIVEDQTY
--	FROM MAXIMO.SERVRECTRANS A
--	JOIN MAXIMO.PO B ON B.PONUM=A.PONUM AND B.STATUS='APPR'
--	JOIN MAXIMO.POLINE C ON C.PONUM=A.PONUM AND C.ITEMNUM=A.ITEMNUM
--	--WHERE A.PONUM='BB60009567'
--	GROUP BY A.PONUM, A.ITEMNUM
--) B ON B.PONUM=A.PONUM
--JOIN MAXIMO.ITEM C ON C.ITEMNUM=B.ITEMNUM
--WHERE A.RECEIPTS!=A.CALCULATED_RECEIPTS
--ORDER BY A.ORDERDATE
