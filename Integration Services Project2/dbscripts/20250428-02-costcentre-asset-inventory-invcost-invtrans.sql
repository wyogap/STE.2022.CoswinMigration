CALL MIGRATION.STE_START_PATCH('20250428-02-COSTCENTRE-ASSET-INVENTORY');

-- BACKUP ASSET, INVENTORY, INVTRANS
--DROP TABLE "MIGRATION"."BAK_20250428_ASSET_GLACCOUNT" IF EXISTS;
CREATE TABLE "MIGRATION"."BAK_20250428_ASSET_GLACCOUNT"  (
		  "ASSETUID" BIGINT,	
		  "ASSETNUM" VARCHAR(13 OCTETS),
		  "STE_CSWNEQCOSC" VARCHAR(16 OCTETS),	
		  "GLACCOUNT" VARCHAR(110 OCTETS)
	)   
;

INSERT INTO "MIGRATION"."BAK_20250428_ASSET_GLACCOUNT" (
	ASSETUID, ASSETNUM, STE_CSWNEQCOSC, GLACCOUNT
)
SELECT A.ASSETUID, A.ASSETNUM, A.STE_CSWNEQCOSC, A.GLACCOUNT
FROM MAXIMO.ASSET A
JOIN MIGRATION.SBST_COSTCENTER_INVALID_MAPPING B ON B.COSWIN_CC=A.STE_CSWNEQCOSC
JOIN MAXIMO.GLCOMPONENTS C ON C.GLORDER=1 AND C.COMPVALUE=B.MAXIMO_CC
WHERE A.STE_MIGRATIONID IS NOT NULL
;

--DROP TABLE "MIGRATION"."BAK_20250428_INVENTORY_GLACCOUNT" IF EXISTS;
CREATE TABLE "MIGRATION"."BAK_20250428_INVENTORY_GLACCOUNT"  (
		  "INVENTORYID" BIGINT,	
		  "ITEMNUM" VARCHAR(30 OCTETS),
		  "LOCATION" VARCHAR(16 OCTETS),
		  "STE_CSWNITEMCC" VARCHAR(16 OCTETS),	
		  "GLACCOUNT" VARCHAR(110 OCTETS)
	)   
;

INSERT INTO "MIGRATION"."BAK_20250428_INVENTORY_GLACCOUNT" (
	INVENTORYID, ITEMNUM, LOCATION, STE_CSWNITEMCC, GLACCOUNT
)
SELECT A.INVENTORYID, A.ITEMNUM, A.LOCATION, B.STE_CSWNITEMCC, A.GLACCOUNT
FROM MAXIMO.INVENTORY A
JOIN MAXIMO.ITEM B ON B.ITEMNUM=A.ITEMNUM
JOIN MIGRATION.SBST_COSTCENTER_INVALID_MAPPING X ON X.COSWIN_CC=B.STE_CSWNITEMCC
JOIN MAXIMO.GLCOMPONENTS Y ON Y.GLORDER=1 AND Y.COMPVALUE=X.MAXIMO_CC
WHERE A.STE_MIGRATIONID IS NOT NULL
;

--DROP TABLE "MIGRATION"."BAK_20250428_INVTRANS_GLDEBITACCT" IF EXISTS;
CREATE TABLE "MIGRATION"."BAK_20250428_INVTRANS_GLDEBITACCT"  (
		  "INVTRANSID" BIGINT,	
		  "ITEMNUM" VARCHAR(30 OCTETS),
		  "STORELOC" VARCHAR(16 OCTETS),
		  "STE_CSWNCC" VARCHAR(16 OCTETS),	
		  "GLDEBITACCT" VARCHAR(110 OCTETS)
	)   
;

INSERT INTO "MIGRATION"."BAK_20250428_INVTRANS_GLDEBITACCT" (
	INVTRANSID, ITEMNUM, STORELOC, STE_CSWNCC, GLDEBITACCT
)
SELECT A.INVTRANSID, A.ITEMNUM, A.STORELOC, A.STE_CSWNCC, A.GLDEBITACCT
FROM MAXIMO.INVTRANS A
JOIN MIGRATION.SBST_COSTCENTER_INVALID_MAPPING X ON X.COSWIN_CC=A.STE_CSWNCC
JOIN MAXIMO.GLCOMPONENTS Y ON Y.GLORDER=1 AND Y.COMPVALUE=X.MAXIMO_CC
WHERE A.STE_MIGRATIONID IS NOT NULL
;

-- ASSET (41.281)
MERGE INTO MAXIMO.ASSET A
USING (
	SELECT A.ASSETUID, A.ASSETNUM, A.STE_CSWNEQCOSC, A.GLACCOUNT
		, B.MAXIMO_CC, C.STE_COSTCENTREDEPT
		, CONCAT(C.STE_COSTCENTREDEPT, CONCAT('-', B.MAXIMO_CC)) AS NEW_GLACCOUNT
	FROM MAXIMO.ASSET A
	JOIN MIGRATION.SBST_COSTCENTER_INVALID_MAPPING B ON B.COSWIN_CC=A.STE_CSWNEQCOSC
	JOIN MAXIMO.GLCOMPONENTS C ON C.GLORDER=1 AND C.COMPVALUE=B.MAXIMO_CC
	WHERE A.STE_MIGRATIONID IS NOT NULL
) B ON B.ASSETUID=A.ASSETUID
WHEN MATCHED THEN
UPDATE SET
	GLACCOUNT=B.NEW_GLACCOUNT
;

-- NO DATA
INSERT INTO MAXIMO.CHARTOFACCOUNTS (
	GLACCOUNT, GLCOMP01, GLCOMP02, GLCOMP03, ACCOUNTNAME, ORGID, ACTIVE
	, LANGCODE, HASLD, ACTIVEDATE
	, STE_MIGRATIONID, STE_MIGRATIONDATE, STE_MIGRATIONSOURCE
	, CHARTOFACCOUNTSID
)
SELECT A.GLACCOUNT
	, CASE WHEN A.GLACCOUNT IS NULL THEN NULL
		   ELSE SUBSTR(A.GLACCOUNT, 1, LOCATE('-', A.GLACCOUNT)-1)
	  END AS Department
	, CASE WHEN A.GLACCOUNT IS NULL THEN NULL
	       WHEN length(A.GLACCOUNT) - length(replace(A.GLACCOUNT,'-','')) >= 2 THEN
				SUBSTR(A.GLACCOUNT, LOCATE('-', A.GLACCOUNT)+1, LOCATE('-', A.GLACCOUNT, LOCATE('-', A.GLACCOUNT)+1)-LOCATE('-', A.GLACCOUNT)-1)
		   ELSE SUBSTR(A.GLACCOUNT, LOCATE('-', A.GLACCOUNT)+1)
	  END AS Costcentre
	, CASE WHEN A.GLACCOUNT IS NULL THEN NULL
	       WHEN length(A.GLACCOUNT) - length(replace(A.GLACCOUNT,'-','')) < 2 THEN NULL
		   ELSE SUBSTR(A.GLACCOUNT, LOCATE('-', A.GLACCOUNT, LOCATE('-', A.GLACCOUNT)+1)+1)
	  END AS SAPGL
	, 'CostCenter' AS ACCOUNTNAME
	, 'SBST' AS ORGID
	, 1 AS ACTIVE
	, 'EN' AS LANGCODE
	, 0 AS HASLD
	, '2000-01-01' AS ACTIVEDATE
	, A.STE_MIGRATIONID
	, ADD_HOURS(CURRENT_TIMESTAMP, 8) AS STE_MIGRATIONDATE
	, 'ASSET' AS STE_MIGRATIONSOURCE
	, X.MAXID + ROW_NUMBER() OVER (ORDER BY A.STE_MIGRATIONID) AS CHARTOFACCOUNTSID
FROM (
	SELECT GLACCOUNT, MIN(STE_MIGRATIONID) AS STE_MIGRATIONID FROM MAXIMO.ASSET
	GROUP BY GLACCOUNT
) A
LEFT JOIN MAXIMO.CHARTOFACCOUNTS B ON B.GLACCOUNT=A.GLACCOUNT
JOIN (
	SELECT MAX(CHARTOFACCOUNTSID) AS MAXID FROM MAXIMO.CHARTOFACCOUNTS
) X ON 1=1
WHERE A.GLACCOUNT IS NOT NULL AND B.CHARTOFACCOUNTSID IS NULL
;

-- INVENTORY (35.935)
MERGE INTO MAXIMO.INVENTORY A
USING (
	SELECT A.INVENTORYID, A.ITEMNUM, A.LOCATION, B.STE_CSWNITEMCC, A.GLACCOUNT
		, X.MAXIMO_CC, Y.STE_COSTCENTREDEPT
		, CONCAT(Y.STE_COSTCENTREDEPT, CONCAT('-', X.MAXIMO_CC)) AS NEW_GLACCOUNT
	FROM MAXIMO.INVENTORY A
	JOIN MAXIMO.ITEM B ON B.ITEMNUM=A.ITEMNUM
	JOIN MIGRATION.SBST_COSTCENTER_INVALID_MAPPING X ON X.COSWIN_CC=B.STE_CSWNITEMCC
	JOIN MAXIMO.GLCOMPONENTS Y ON Y.GLORDER=1 AND Y.COMPVALUE=X.MAXIMO_CC
	WHERE A.STE_MIGRATIONID IS NOT NULL
) B ON B.INVENTORYID=A.INVENTORYID
WHEN MATCHED THEN
UPDATE SET
	GLACCOUNT=B.NEW_GLACCOUNT
;

-- NO DATA
INSERT INTO MAXIMO.CHARTOFACCOUNTS (
	GLACCOUNT, GLCOMP01, GLCOMP02, GLCOMP03, ACCOUNTNAME, ORGID, ACTIVE
	, LANGCODE, HASLD, ACTIVEDATE
	, STE_MIGRATIONID, STE_MIGRATIONDATE, STE_MIGRATIONSOURCE
	, CHARTOFACCOUNTSID
)
SELECT A.GLACCOUNT
	, CASE WHEN A.GLACCOUNT IS NULL THEN NULL
		   ELSE SUBSTR(A.GLACCOUNT, 1, LOCATE('-', A.GLACCOUNT)-1)
	  END AS Department
	, CASE WHEN A.GLACCOUNT IS NULL THEN NULL
	       WHEN length(A.GLACCOUNT) - length(replace(A.GLACCOUNT,'-','')) >= 2 THEN
				SUBSTR(A.GLACCOUNT, LOCATE('-', A.GLACCOUNT)+1, LOCATE('-', A.GLACCOUNT, LOCATE('-', A.GLACCOUNT)+1)-LOCATE('-', A.GLACCOUNT)-1)
		   ELSE SUBSTR(A.GLACCOUNT, LOCATE('-', A.GLACCOUNT)+1)
	  END AS Costcentre
	, CASE WHEN A.GLACCOUNT IS NULL THEN NULL
	       WHEN length(A.GLACCOUNT) - length(replace(A.GLACCOUNT,'-','')) < 2 THEN NULL
		   ELSE SUBSTR(A.GLACCOUNT, LOCATE('-', A.GLACCOUNT, LOCATE('-', A.GLACCOUNT)+1)+1)
	  END AS SAPGL
	, 'CostCenter' AS ACCOUNTNAME
	, 'SBST' AS ORGID
	, 1 AS ACTIVE
	, 'EN' AS LANGCODE
	, 0 AS HASLD
	, '2000-01-01' AS ACTIVEDATE
	, A.STE_MIGRATIONID
	, ADD_HOURS(CURRENT_TIMESTAMP, 8) AS STE_MIGRATIONDATE
	, 'INVENTORY' AS STE_MIGRATIONSOURCE
	, X.MAXID + ROW_NUMBER() OVER (ORDER BY A.STE_MIGRATIONID) AS CHARTOFACCOUNTSID
FROM (
	SELECT GLACCOUNT, MIN(STE_MIGRATIONID) AS STE_MIGRATIONID FROM MAXIMO.INVENTORY 
	GROUP BY GLACCOUNT
) A
LEFT JOIN MAXIMO.CHARTOFACCOUNTS B ON B.GLACCOUNT=A.GLACCOUNT
JOIN (
	SELECT MAX(CHARTOFACCOUNTSID) AS MAXID FROM MAXIMO.CHARTOFACCOUNTS
) X ON 1=1
WHERE A.GLACCOUNT IS NOT NULL AND B.CHARTOFACCOUNTSID IS NULL
;

-- INVCOST (35.935)
MERGE INTO MAXIMO.INVCOST A
USING (
	SELECT A.INVCOSTID, A.ITEMNUM, A.LOCATION, A.GLACCOUNT, B.GLACCOUNT AS NEW_GLACCOUNT
	FROM MAXIMO.INVCOST A
	JOIN MAXIMO.INVENTORY B ON B.ITEMNUM=A.ITEMNUM AND B.LOCATION=A.LOCATION
	WHERE COALESCE(A.GLACCOUNT,'')!=COALESCE(B.GLACCOUNT,'')
		AND B.STE_MIGRATIONID IS NOT NULL
) B ON B.INVCOSTID=A.INVCOSTID
WHEN MATCHED THEN
UPDATE SET
	GLACCOUNT=B.NEW_GLACCOUNT
;

-- INVTRANS (29.292)
MERGE INTO MAXIMO.INVTRANS A
USING (
	SELECT A.INVTRANSID, A.ITEMNUM, A.STORELOC, A.STE_CSWNCC, A.GLDEBITACCT
		, X.MAXIMO_CC, Y.STE_COSTCENTREDEPT
		, CONCAT(Y.STE_COSTCENTREDEPT, CONCAT('-', X.MAXIMO_CC)) AS NEW_GLACCOUNT
	FROM MAXIMO.INVTRANS A
	JOIN MIGRATION.SBST_COSTCENTER_INVALID_MAPPING X ON X.COSWIN_CC=A.STE_CSWNCC
	JOIN MAXIMO.GLCOMPONENTS Y ON Y.GLORDER=1 AND Y.COMPVALUE=X.MAXIMO_CC
	WHERE A.STE_MIGRATIONID IS NOT NULL
) B ON B.INVTRANSID=A.INVTRANSID
WHEN MATCHED THEN
UPDATE SET
	GLDEBITACCT=B.NEW_GLACCOUNT
;

-- NO DATA
INSERT INTO MAXIMO.CHARTOFACCOUNTS (
	GLACCOUNT, GLCOMP01, GLCOMP02, GLCOMP03, ACCOUNTNAME, ORGID, ACTIVE
	, LANGCODE, HASLD, ACTIVEDATE
	, STE_MIGRATIONID, STE_MIGRATIONDATE, STE_MIGRATIONSOURCE
	, CHARTOFACCOUNTSID
)
SELECT A.GLDEBITACCT AS GLACCOUNT
	, CASE WHEN A.GLDEBITACCT IS NULL THEN NULL
		   ELSE SUBSTR(A.GLDEBITACCT, 1, LOCATE('-', A.GLDEBITACCT)-1)
	  END AS Department
	, CASE WHEN A.GLDEBITACCT IS NULL THEN NULL
	       WHEN length(A.GLDEBITACCT) - length(replace(A.GLDEBITACCT,'-','')) >= 2 THEN
				SUBSTR(A.GLDEBITACCT, LOCATE('-', A.GLDEBITACCT)+1, LOCATE('-', A.GLDEBITACCT, LOCATE('-', A.GLDEBITACCT)+1)-LOCATE('-', A.GLDEBITACCT)-1)
		   ELSE SUBSTR(A.GLDEBITACCT, LOCATE('-', A.GLDEBITACCT)+1)
	  END AS Costcentre
	, CASE WHEN A.GLDEBITACCT IS NULL THEN NULL
	       WHEN length(A.GLDEBITACCT) - length(replace(A.GLDEBITACCT,'-','')) < 2 THEN NULL
		   ELSE SUBSTR(A.GLDEBITACCT, LOCATE('-', A.GLDEBITACCT, LOCATE('-', A.GLDEBITACCT)+1)+1)
	  END AS SAPGL
	, 'CostCenter' AS ACCOUNTNAME
	, 'SBST' AS ORGID
	, 1 AS ACTIVE
	, 'EN' AS LANGCODE
	, 0 AS HASLD
	, '2000-01-01' AS ACTIVEDATE
	, A.STE_MIGRATIONID
	, ADD_HOURS(CURRENT_TIMESTAMP, 8) AS STE_MIGRATIONDATE
	, 'INVTRANS' AS STE_MIGRATIONSOURCE
	, X.MAXID + ROW_NUMBER() OVER (ORDER BY A.STE_MIGRATIONID) AS CHARTOFACCOUNTSID
FROM (
	SELECT GLDEBITACCT, MIN(STE_MIGRATIONID) AS STE_MIGRATIONID FROM MAXIMO.INVTRANS 
	GROUP BY GLDEBITACCT
) A
LEFT JOIN MAXIMO.CHARTOFACCOUNTS B ON B.GLACCOUNT=A.GLDEBITACCT
JOIN (
	SELECT MAX(CHARTOFACCOUNTSID) AS MAXID FROM MAXIMO.CHARTOFACCOUNTS
) X ON 1=1
WHERE A.GLDEBITACCT IS NOT NULL AND B.CHARTOFACCOUNTSID IS NULL
;

-- UPDATE COA MAXID
CALL MIGRATION.STE_UPDATE_SEQ('CHARTOFACCOUNTSSEQ', 'CHARTOFACCOUNTS', 'CHARTOFACCOUNTSID');

CALL MIGRATION.STE_FINISH_PATCH('20250428-02-COSTCENTRE-ASSET-INVENTORY');