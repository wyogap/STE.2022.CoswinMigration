CALL MIGRATION.STE_START_PATCH('20250527-03-RPT-ACCRUAL');

CREATE OR REPLACE VIEW MAXIMO.STE_RPT_ACCRUAL_STK AS
SELECT
	'2.3' AS VERSION
	, m.STE_MIGRATIONID AS PK_RCT_ITEMS
	, m.PACKINGSLIPNUM AS PACKINGSLIPNUM
	, CAST(m.COMPLETEDDATE AS DATE) AS TRANSDATE
	, m.COMPLETEDDATE AS TRANSDATETIME
	, m.LINECOST AS LINECOST
	, 'STK' AS STK_NS
	, m.ITEMNUM
	, i.STE_CSWNITEMNO AS COSWIN_ITEM_CODE
	, i.DESCRIPTION AS ITEM_DESCRIPTION
	, m.STE_CSWNGRNNUM AS GRNUM
	, m.STE_CSWNGRNDATE AS GRDATE
	, c.STE_CSWNSAPVNDCODE AS SAP_VENDOR_CODE
	, c.NAME AS SUPPLIER_NAME
	, m.GLDEBITACCT
	, m.COSTCENTER
	, m.SAP_GL_CODE
	--, coa.GLCOMP02 AS COSTCENTER 
	--, coa.GLCOMP03 AS SAP_GL_CODE 
	--, coalesce(pc.QUANTITY, m.STE_CSWNACPQTY) AS QUANTITY_PER_CC
	, CASE WHEN m.COMPLETEDDATE<='2025-03-30' THEN COALESCE(m.STE_CSWNACPQTY, m.QUANTITY) 
		   ELSE m.QUANTITY
	  END AS QUANTITY
	, m.ORDERQTY
	, l.INVOICEQTY
	, COALESCE(t1.ACCEPTEDQTY,0) + COALESCE(t2.ACCEPTEDQTY,0) AS ACCEPTEDQTY
	--, m.STATUS
	, m.PL_GLDEBITACCT
	, m.PL_COSTCENTER
	, m.PL_SAP_GL_CODE
FROM (
	SELECT m.* 
	, CASE WHEN m.GLDEBITACCT IS NULL THEN NULL
	       WHEN length(m.GLDEBITACCT) - length(replace(m.GLDEBITACCT,'-','')) >= 2 THEN
				SUBSTR(m.GLDEBITACCT, LOCATE('-', m.GLDEBITACCT)+1, LOCATE('-', m.GLDEBITACCT, LOCATE('-', m.GLDEBITACCT)+1)-LOCATE('-', m.GLDEBITACCT)-1)
		   ELSE SUBSTR(m.GLDEBITACCT, LOCATE('-', m.GLDEBITACCT)+1)
	  END AS COSTCENTER
	, CASE WHEN m.GLDEBITACCT IS NULL THEN NULL
	       WHEN length(m.GLDEBITACCT) - length(replace(m.GLDEBITACCT,'-','')) < 2 THEN NULL
		   ELSE SUBSTR(m.GLDEBITACCT, LOCATE('-', m.GLDEBITACCT, LOCATE('-', m.GLDEBITACCT)+1)+1)
	  END AS SAP_GL_CODE
	, pl.ORDERQTY
	, pl.GLDEBITACCT AS PL_GLDEBITACCT
	, CASE WHEN pl.GLDEBITACCT IS NULL THEN NULL
	       WHEN length(pl.GLDEBITACCT) - length(replace(pl.GLDEBITACCT,'-','')) >= 2 THEN
				SUBSTR(pl.GLDEBITACCT, LOCATE('-', pl.GLDEBITACCT)+1, LOCATE('-', pl.GLDEBITACCT, LOCATE('-', pl.GLDEBITACCT)+1)-LOCATE('-', pl.GLDEBITACCT)-1)
		   ELSE SUBSTR(pl.GLDEBITACCT, LOCATE('-', pl.GLDEBITACCT)+1)
	  END AS PL_COSTCENTER
	, CASE WHEN m.GLDEBITACCT IS NULL THEN NULL
	       WHEN length(pl.GLDEBITACCT) - length(replace(pl.GLDEBITACCT,'-','')) < 2 THEN NULL
		   ELSE SUBSTR(pl.GLDEBITACCT, LOCATE('-', pl.GLDEBITACCT, LOCATE('-', pl.GLDEBITACCT)+1)+1)
	  END AS PL_SAP_GL_CODE
	FROM (
		-- no inspection and migrated data
		SELECT m.matrectransid, m.ponum, m.polinenum, m.porevisionnum, m.transdate, m.statusdate AS completeddate
			, m.itemnum, (m.quantity-m.rejectqty) AS quantity, m.linecost, m.STE_CSWNGRNNUM, m.STE_CSWNGRNDATE, m.PACKINGSLIPNUM
			, m.GLDEBITACCT, m.STE_MIGRATIONID, M.STE_CSWNACPQTY, M.STE_CSWNRCTQTY, M.STE_CSWNRTNTOSUPL, M.STE_CSWNRCTSTATUS
		FROM maximo.MATRECTRANS m
		WHERE m.ISSUETYPE='RECEIPT' AND m.STATUS='COMP' AND m.FROMSTORELOC IS NULL AND m.TOSTORELOC!='L100000019292'	
			--AND m.ponum='AA10016094'
		
		UNION
		
		-- inspection
		SELECT r.matrectransid, r.ponum, r.polinenum, r.porevisionnum, r.transdate, m.transdate AS completeddate
			, r.itemnum, (m.quantity+COALESCE(rtn.quantity,0)) AS quantity, m.linecost, r.STE_CSWNGRNNUM, r.STE_CSWNGRNDATE, r.PACKINGSLIPNUM
			, r.GLDEBITACCT, r.STE_MIGRATIONID, r.STE_CSWNACPQTY, r.STE_CSWNRCTQTY, r.STE_CSWNRTNTOSUPL, r.STE_CSWNRCTSTATUS
			--, rtn.tostoreloc, r.tostoreloc, m.tostoreloc
		FROM maximo.MATRECTRANS m
		JOIN maximo.MATRECTRANS r ON r.matrectransid=m.receiptref
		LEFT JOIN maximo.matrectrans rtn ON rtn.issuetype='RETURN' AND rtn.receiptref=m.receiptref AND rtn.tostoreloc=m.tostoreloc 
		WHERE m.ISSUETYPE='TRANSFER' AND m.STATUS='COMP' AND m.FROMSTORELOC='L100000019292' AND m.TOSTORELOC IS NOT NULL AND m.TOSTORELOC!='L100000019292'
			--AND m.ponum='AA10016094'
			--and r.STE_CSWNGRNNUM='GRN25/0307'
	) m
	JOIN maximo.POLINE pl ON pl.PONUM=m.PONUM AND pl.POLINENUM=m.POLINENUM AND pl.REVISIONNUM=m.POREVISIONNUM
) m
JOIN maximo.PO po ON po.PONUM=m.PONUM AND po.REVISIONNUM=m.POREVISIONNUM
JOIN maximo.COMPANIES c ON c.COMPANY=po.VENDOR 
JOIN maximo.ITEM i ON i.ITEMNUM=m.ITEMNUM
--JOIN maximo.POLINE pl ON pl.PONUM=m.PONUM AND pl.POLINENUM=m.POLINENUM AND pl.REVISIONNUM=m.POREVISIONNUM
LEFT JOIN maximo.CHARTOFACCOUNTS coa ON coa.GLACCOUNT=m.GLDEBITACCT
-- LEFT JOIN maximo.STE_CSWNRECEIPT_PER_CC pc ON pc.MATRECTRANSID=m.MATRECTRANSID
-- total invoiced
LEFT JOIN (
	SELECT l.PONUM, l.POLINENUM, l.POREVISIONNUM, SUM(INVOICEQTY) AS INVOICEQTY
	FROM maximo.INVOICELINE l
	GROUP BY l.PONUM, l.POLINENUM, l.POREVISIONNUM
) l ON l.PONUM=m.PONUM AND l.POLINENUM=m.POLINENUM AND l.POREVISIONNUM=m.POREVISIONNUM
-- total received and accepted
LEFT JOIN (
	-- no inspection and migrated data
	SELECT m.ponum, m.polinenum, m.porevisionnum, sum(m.quantity-m.rejectqty) AS ACCEPTEDQTY
	FROM maximo.MATRECTRANS m
	WHERE m.ISSUETYPE='RECEIPT' AND m.STATUS='COMP' AND m.FROMSTORELOC IS NULL AND m.TOSTORELOC!='L100000019292'	
	GROUP BY m.PONUM, m.POLINENUM, m.POREVISIONNUM
) t1 ON t1.PONUM=m.PONUM AND t1.POLINENUM=m.POLINENUM AND t1.POREVISIONNUM=m.POREVISIONNUM
LEFT JOIN (
	-- with inspection
	SELECT r.ponum, r.polinenum, r.porevisionnum, sum(m.quantity+COALESCE(rtn.quantity,0)) AS ACCEPTEDQTY
	FROM maximo.MATRECTRANS m
	JOIN maximo.MATRECTRANS r ON r.matrectransid=m.receiptref
	LEFT JOIN maximo.matrectrans rtn ON rtn.issuetype='RETURN' AND rtn.receiptref=m.receiptref AND rtn.tostoreloc=m.tostoreloc 
	WHERE m.ISSUETYPE='TRANSFER' AND m.STATUS='COMP' AND m.FROMSTORELOC='L100000019292' AND m.TOSTORELOC IS NOT NULL AND m.TOSTORELOC!='L100000019292'
	GROUP BY r.ponum, r.polinenum, r.porevisionnum
) t2 ON t2.PONUM=m.PONUM AND t2.POLINENUM=m.POLINENUM AND t2.POREVISIONNUM=m.POREVISIONNUM
-- Ideally we created records here for migrated data. But at the moment, none is created
LEFT JOIN maximo.INVOICEMATCH im ON im.MATRECTRANSID=m.MATRECTRANSID
WHERE 1=1
	--AND m.ISSUETYPE IN ('RECEIPT')	-- MOVED TO SUBQUERY
	AND po.STATUS IN (SELECT VALUE FROM MAXIMO.SYNONYMDOMAIN WHERE DOMAINID='POSTATUS' AND MAXVALUE IN ('APPR', 'INPRG', 'CLOSE'))
	-- Accrual: Receipt which has not been invoiced
	AND COALESCE(l.INVOICEQTY,0) < m.ORDERQTY
	AND COALESCE(l.INVOICEQTY,0) < (COALESCE(t1.ACCEPTEDQTY,0) + COALESCE(t2.ACCEPTEDQTY,0))
	AND im.INVOICEMATCHID IS NULL
	-- valid qty
	AND (
		-- before migration, use ACP_QTY
		(m.COMPLETEDDATE<='2025-03-30' AND COALESCE(m.STE_CSWNACPQTY, m.QUANTITY) > 0)
		-- after migration, use QUANTITY
		OR (m.COMPLETEDDATE>'2025-03-30' AND m.QUANTITY>0)
	)
	--AND m.INSPECTEDQTY <> m.REJECTQTY
	-- Valid SAPGL
	--AND ( coa.GLCOMP03 IS NOT NULL ) 
	--AND ( coa.GLCOMP03 BETWEEN '100000' AND '299999' ) 
	--AND ( coa.GLCOMP03 <> '113601' ) 
	-- Valid costcenter: not necessary since now costcenter is part of GLDEBITACCT
	--AND ( coa.GLCOMP02 IS NOT NULL ) 
	-- LEGACY FROM COSWIN: receiptval > 0
	AND m.LINECOST>0
	-- LEGACY FROM COSWIN: receiptstatus != fully invoiced
	AND ( CHR(COALESCE(m.STE_CSWNRCTSTATUS,50)) <> '3' )	-- 51
	-- LEGACY FROM COSWIN
	AND ( m.PONUM <> 'EE10005692' ) 
	AND ( m.PONUM <> 'EE10005693' )  
	AND ( coalesce(m.STE_CSWNRCTQTY,1) <> coalesce(m.STE_CSWNRTNTOSUPL,0) )  
	--AND m.STATUS NOT IN ('WINSP', 'WASSET')	-- MOVED TO SUBQUERY
	--and m.STE_CSWNGRNNUM in 
;

UPDATE maximo.matrectrans 
SET
	LINECOST=QUANTITY*UNITCOST,
	CURRENCYLINECOST=QUANTITY*CURRENCYUNITCOST
WHERE linecost=0 AND unitcost>0 AND quantity>0;

UPDATE maximo.matrectrans 
SET
	CURRENCYLINECOST=QUANTITY*CURRENCYUNITCOST
WHERE currencylinecost=0 AND currencyunitcost>0 AND quantity>0;

CALL MIGRATION.STE_FINISH_PATCH('20250527-03-RPT-ACCRUAL');