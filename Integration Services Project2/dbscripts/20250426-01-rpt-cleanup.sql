CALL MIGRATION.STE_START_PATCH('20250426-01-BIRT-REPORT');

-- CLEANUP OBSOLETE VIEWS
DROP VIEW CSWN_ACCRUAL_STK_CR;
DROP VIEW CSWN_ACCRUAL_STK_DR;
DROP VIEW CSWN_CN_CR_STK;
DROP VIEW CSWN_CN_CR_TAX_STK;
DROP VIEW CSWN_CN_DR_STK;
DROP VIEW CSWN_GL_ISSUES_CR;
DROP VIEW CSWN_GL_ISSUES_DR;
DROP VIEW CSWN_GL_RETURN_CR;
DROP VIEW CSWN_GL_RETURN_DR;
DROP VIEW CSWN_INV_CR_STK;
DROP VIEW CSWN_INV_CR_TAX_STK;
DROP VIEW CSWN_INV_DR_STK;
DROP VIEW CSWN_INV_DR_TAX_STK;

-- CREATE VIEW FOR ACCRUAL
CREATE OR REPLACE VIEW MAXIMO.STE_RPT_ACCRUAL_STK AS
SELECT
	m.STE_MIGRATIONID AS PK_RCT_ITEMS
	, m.PACKINGSLIPNUM AS PACKINGSLIPNUM
	, m.TRANSDATE AS TRANSDATE
	, m.LINECOST AS LINECOST
	, 'STK' AS STK_NS
	, m.ITEMNUM
	, i.STE_CSWNITEMNO AS COSWIN_ITEM_CODE
	, i.DESCRIPTION AS ITEM_DESCRIPTION
	, m.STE_CSWNGRNNUM AS GRNUM
	, c.STE_CSWNSAPVNDCODE AS SAP_VENDOR_CODE
	, m.GLDEBITACCT
	, coa.GLCOMP02 AS COSTCENTER 
	, coa.GLCOMP03 AS SAP_GL_CODE 
	--, coalesce(pc.QUANTITY, m.STE_CSWNACPQTY) AS QUANTITY_PER_CC
	, COALESCE(m.STE_CSWNACPQTY, m.QUANTITY) AS QUANTITY
	, pl.ORDERQTY
	, l.INVOICEQTY
	, t.ACCEPTEDQTY
FROM maximo.MATRECTRANS m 
JOIN maximo.PO po ON po.PONUM=m.PONUM AND po.REVISIONNUM=m.POREVISIONNUM
JOIN maximo.COMPANIES c ON c.COMPANY=po.VENDOR 
JOIN maximo.ITEM i ON i.ITEMNUM=m.ITEMNUM
JOIN maximo.POLINE pl ON pl.PONUM=m.PONUM AND pl.POLINENUM=m.POLINENUM AND pl.REVISIONNUM=m.POREVISIONNUM
JOIN maximo.CHARTOFACCOUNTS coa ON coa.GLACCOUNT=m.GLDEBITACCT
-- LEFT JOIN maximo.STE_CSWNRECEIPT_PER_CC pc ON pc.MATRECTRANSID=m.MATRECTRANSID
-- total invoiced
LEFT JOIN (
	SELECT l.PONUM, l.POLINENUM, l.POREVISIONNUM, SUM(INVOICEQTY) AS INVOICEQTY
	FROM maximo.INVOICELINE l
	GROUP BY l.PONUM, l.POLINENUM, l.POREVISIONNUM
) l ON l.PONUM=m.PONUM AND l.POLINENUM=m.POLINENUM AND l.POREVISIONNUM=m.POREVISIONNUM
-- total received and accepted
LEFT JOIN (
	SELECT m.PONUM, m.POLINENUM, m.POREVISIONNUM, SUM(m.QUANTITY) AS ACCEPTEDQTY
	FROM maximo.MATRECTRANS m
	GROUP BY m.PONUM, m.POLINENUM, m.POREVISIONNUM
) t ON t.PONUM=m.PONUM AND t.POLINENUM=m.POLINENUM AND t.POREVISIONNUM=m.POREVISIONNUM
-- Ideally we created records here for migrated data. But at the moment, none is created
LEFT JOIN maximo.INVOICEMATCH im ON im.MATRECTRANSID=m.MATRECTRANSID
WHERE 1=1
	--AND m.STE_CSWNGRNNUM IN ('GRN22\1355', 'GRN24/0257', 'GRN23/0909')
	--AND m.STE_CSWNGRNNUM IN ('GRN23/1739', 'GRN23\1744', 'GRN24/0095', 'GRN24/0165', 'GRN24/0167', 'GRN24/0201', 'GRN24/0202', 'GRN24\0127',
	--	'GRN24/0225', 'GRN24/0226', 'GRN24/0224', 'GRN24/0235', 'GRN24/0258')
	--AND m.STE_CSWNGRNNUM IN ('GRN24\0127')
	AND m.ISSUETYPE IN ('RECEIPT')
	AND po.STATUS='APPR'
	-- Accrual: Receipt which has not been invoiced
	AND COALESCE(l.INVOICEQTY,0) < pl.ORDERQTY
	AND COALESCE(l.INVOICEQTY,0) < COALESCE(t.ACCEPTEDQTY,0)
	AND im.INVOICEMATCHID IS NULL
	-- Note: Wrong mapping. MATRECTRANS.QUANTITY should have been Coswin AcceptedQTY, 
	--       MATRECTRANS.INSPECTEDQTY should have been Coswin ReceivedQTY
	AND COALESCE(m.STE_CSWNACPQTY, m.QUANTITY) > 0
	--AND m.INSPECTEDQTY <> m.REJECTQTY
	-- Valid SAPGL
	AND ( coa.GLCOMP03 IS NOT NULL ) 
	AND ( coa.GLCOMP03 BETWEEN '100000' AND '299999' ) 
	AND ( coa.GLCOMP03 <> '113601' ) 
	-- Valid costcenter: not necessary since now costcenter is part of GLDEBITACCT
	--AND ( coa.GLCOMP02 IS NOT NULL ) 
	-- LEGACY FROM COSWIN: receiptval > 0
	AND m.LINECOST>0
	-- LEGACY FROM COSWIN: receiptstatus != fully invoiced
	AND ( CHR(m.STE_CSWNRCTSTATUS) <> '3' ) 	-- 51
	-- LEGACY FROM COSWIN
	AND ( m.PONUM <> 'EE10005692' ) 
	AND ( m.PONUM <> 'EE10005693' )  
	AND ( coalesce(m.STE_CSWNRCTQTY,1) <> coalesce(m.STE_CSWNRTNTOSUPL,0) )  
;

CREATE OR REPLACE VIEW MAXIMO.STE_RPT_ACCRUAL_NS AS
SELECT
	m.STE_MIGRATIONID AS PK_RCT_ITEMS
	, m.PACKINGSLIPNUM AS PACKINGSLIPNUM
	, m.TRANSDATE AS TRANSDATE
	, m.LINECOST AS LINECOST
	, 'NS' AS STK_NS
	, m.ITEMNUM
	, i.STE_CSWNITEMNO AS COSWIN_ITEM_CODE
	, i.DESCRIPTION AS ITEM_DESCRIPTION
	, m.STE_CSWNGRNNUM AS GRNUM
	, c.STE_CSWNSAPVNDCODE AS SAP_VENDOR_CODE
	, m.GLDEBITACCT
	, coa.GLCOMP02 AS COSTCENTER 
	, coa.GLCOMP03 AS SAP_GL_CODE 
	--, coalesce(pc.QUANTITY, m.STE_CSWNACPQTY) AS QUANTITY_PER_CC
	, COALESCE(m.STE_CSWNACPQTY, m.QUANTITY) AS QUANTITY
	, pl.ORDERQTY
	, l.INVOICEQTY
	, t.ACCEPTEDQTY
FROM maximo.SERVRECTRANS m 
JOIN maximo.PO po ON po.PONUM=m.PONUM AND po.REVISIONNUM=m.POREVISIONNUM
JOIN maximo.COMPANIES c ON c.COMPANY=po.VENDOR 
JOIN maximo.ITEM i ON i.ITEMNUM=m.ITEMNUM
JOIN maximo.POLINE pl ON pl.PONUM=m.PONUM AND pl.POLINENUM=m.POLINENUM AND pl.REVISIONNUM=m.POREVISIONNUM
JOIN maximo.CHARTOFACCOUNTS coa ON coa.GLACCOUNT=m.GLDEBITACCT
-- LEFT JOIN maximo.STE_CSWNRECEIPT_PER_CC pc ON pc.MATRECTRANSID=m.MATRECTRANSID
-- total invoiced
LEFT JOIN (
	SELECT l.PONUM, l.POLINENUM, l.POREVISIONNUM, SUM(INVOICEQTY) AS INVOICEQTY
	FROM maximo.INVOICELINE l
	GROUP BY l.PONUM, l.POLINENUM, l.POREVISIONNUM
) l ON l.PONUM=m.PONUM AND l.POLINENUM=m.POLINENUM AND l.POREVISIONNUM=m.POREVISIONNUM
-- total received and accepted
LEFT JOIN (
	SELECT m.PONUM, m.POLINENUM, m.POREVISIONNUM, SUM(m.QUANTITY) AS ACCEPTEDQTY
	FROM maximo.SERVRECTRANS m
	GROUP BY m.PONUM, m.POLINENUM, m.POREVISIONNUM
) t ON t.PONUM=m.PONUM AND t.POLINENUM=m.POLINENUM AND t.POREVISIONNUM=m.POREVISIONNUM
-- Ideally we created records here for migrated data. But at the moment, none is created
LEFT JOIN maximo.INVOICEMATCH im ON im.SERVRECTRANSID=m.SERVRECTRANSID
WHERE 1=1
	--AND m.STE_CSWNGRNNUM IN ('GRN22\1355', 'GRN24/0257', 'GRN23/0909')
	--AND m.STE_CSWNGRNNUM IN ('GRN23/1739', 'GRN23\1744', 'GRN24/0095', 'GRN24/0165', 'GRN24/0167', 'GRN24/0201', 'GRN24/0202', 'GRN24\0127',
	--	'GRN24/0225', 'GRN24/0226', 'GRN24/0224', 'GRN24/0235', 'GRN24/0258')
	--AND m.STE_CSWNGRNNUM IN ('GRN24\0127')
	AND m.ISSUETYPE IN ('RECEIPT')
	AND po.STATUS='APPR'
	-- Accrual: Receipt which has not been invoiced
	AND COALESCE(l.INVOICEQTY,0) < pl.ORDERQTY
	AND COALESCE(l.INVOICEQTY,0) < COALESCE(t.ACCEPTEDQTY,0)
	AND im.INVOICEMATCHID IS NULL
	-- Note: Wrong mapping. MATRECTRANS.QUANTITY should have been Coswin AcceptedQTY, 
	--       MATRECTRANS.INSPECTEDQTY should have been Coswin ReceivedQTY
	AND COALESCE(m.STE_CSWNACPQTY, m.QUANTITY) > 0
	--AND m.INSPECTEDQTY <> m.REJECTQTY
	-- Valid SAPGL
	AND ( coa.GLCOMP03 IS NOT NULL ) 
	AND ( coa.GLCOMP03 BETWEEN '100000' AND '299999' ) 
	AND ( coa.GLCOMP03 <> '113601' ) 
	-- Valid costcenter: not necessary since now costcenter is part of GLDEBITACCT
	--AND ( coa.GLCOMP02 IS NOT NULL ) 
	-- LEGACY FROM COSWIN: receiptval > 0
	AND m.LINECOST>0
	-- LEGACY FROM COSWIN: receiptstatus != fully invoiced
	AND ( CHR(m.STE_CSWNRCTSTATUS) <> '3' ) 	-- 51
	-- LEGACY FROM COSWIN
	AND ( m.PONUM <> 'EE10005692' ) 
	AND ( m.PONUM <> 'EE10005693' )  
	AND ( coalesce(m.STE_CSWNRCTQTY,1) <> coalesce(m.STE_CSWNRTNTOSUPL,0) )  
;

-- UPDATE STOCK-DOWNLOAD VIEW
CREATE OR REPLACE VIEW MAXIMO.STE_RPT_STOCK_ISSUE AS
SELECT 
	m.STE_MIGRATIONID AS PK_DEM_ISS, mut.STE_MIGRATIONID AS PK_ISS_ITEMS
	, m.MRID
	, mut.MATUSETRANSID AS Issue_Num
	, mut.STE_ISSUENUM AS Coswin_Issue_Num
	, i.STE_LINE AS Line
	, i.STE_OWNERDEPARTMENT AS Dept
	, i.STE_CSWNAUTHORITY AS Authority_Code
	, i.ITEMNUM AS ITEMNUM
	, i.STE_CSWNITEMNO AS Coswin_Item_Code
	, i.DESCRIPTION AS Item_Description
	, i.STE_ITEMGROUP AS Group_Code
	, aln.DESCRIPTION AS Group_Description
	--, concat(i.STE_ITEMGROUP, CONCAT(' - ', aln.DESCRIPTION)) AS Group_Code_Description
	, i.STE_CSWNITEMCAT AS Category_Code
	, mut.ACTUALDATE AS Issue_Date
	, -1 * mut.QUANTITY AS Issued_Qty
	, ret.QUANTITY AS Returned_Qty
	, ret.ACTUALDATE AS Return_Date
	, m.MRNUM AS MRNUM
	, m.STE_CSWNDEMREF AS Coswin_Demand_No
	, mut.GLCREDITACCT  
	, mut.GLDEBITACCT  
	, CASE WHEN mut.GLDEBITACCT IS NULL THEN NULL
	       WHEN length(mut.GLDEBITACCT) - length(replace(mut.GLDEBITACCT,'-','')) >= 2 THEN
				SUBSTR(mut.GLDEBITACCT, LOCATE('-', mut.GLDEBITACCT)+1, LOCATE('-', mut.GLDEBITACCT, LOCATE('-', mut.GLDEBITACCT)+1)-LOCATE('-', mut.GLDEBITACCT)-1)
		   ELSE SUBSTR(mut.GLDEBITACCT, LOCATE('-', mut.GLDEBITACCT)+1)
	  END AS Costcentre
	, m.STE_CSWNCC AS Coswin_CC_Code
	--, gl.COMPTEXT AS CostCentre_Description
	, m.REQUESTEDBY 
	, p.DISPLAYNAME AS Requester
	, m.STE_MIGRATIONDEMANDER AS Coswin_Requester
	, i.ISSUEUNIT
	, mut.CURBAL
	, COALESCE(inv.CURBAL,0) AS Inventory_CURBAL
	, m.WONUM
	, wo.STE_CSWNWOID AS Coswin_WOID
	, m.STE_REMARKS AS Remarks
	, m.ENTERDATE AS Enter_Date
	, mut.ACTUALCOST AS Issue_Value
	, ret.ACTUALCOST AS Return_Value
	, mut.UNITCOST
	, mut.CURRENCYCODE
	, m.STATUS
	, i.STE_CSWNITEMCAT
	, debitsapgl.SAPGL AS DEBITSAPGL
	, creditsapgl.SAPGL AS CREDITSAPGL
FROM MAXIMO.MATUSETRANS mut
JOIN MAXIMO.MR m ON mut.MRNUM=m.MRNUM 
JOIN MAXIMO.ITEM i ON i.ITEMNUM=mut.ITEMNUM
--LEFT JOIN MAXIMO.CHARTOFACCOUNTS coa ON coa.GLACCOUNT=mut.GLDEBITACCT
--LEFT JOIN MAXIMO.GLCOMPONENTS gl ON gl.GLORDER=1 AND gl.COMPVALUE=coa.GLCOMP02
LEFT JOIN MAXIMO.ALNDOMAIN aln ON aln.DOMAINID='STE_ITEMGROUP' AND aln.VALUE=i.STE_ITEMGROUP
LEFT JOIN MAXIMO.PERSON p ON p.PERSONID=m.REQUESTEDBY
LEFT JOIN MAXIMO.MATUSETRANS ret ON ret.ISSUETYPE='RETURN' 
	AND ret.MRNUM=mut.MRNUM AND ret.ITEMNUM=mut.ITEMNUM
	--AND ret.ACTUALDATE BETWEEN '2023-01-01' AND '2023-12-31'
LEFT JOIN MAXIMO.WORKORDER wo ON wo.WONUM=m.WONUM
LEFT JOIN (
	SELECT ITEMNUM, SUM(CURBAL) AS CURBAL
	FROM MAXIMO.INVBALANCES
	GROUP BY ITEMNUM
) inv ON inv.ITEMNUM=mut.ITEMNUM
-- SAPGL BASED ON ITEM CATEGORY
LEFT JOIN (
	VALUES('113602', 'SG_OEM_PWR'),
		  ('113603', 'SG_OEM_COM'),
		  ('113604', 'SG_OEM_SYS'),
		  ('113605', 'SG_OEM_RST'),
		  ('113606', 'SG_OEM_SIG'),
		  ('113607', 'SG_OEM_PWY'),
		  ('113608', 'SG_OEM_PMT'),
	      ('113610', 'SG_CONSUME'),
		  ('113612', 'SG_OEM_LRT')
) AS debitsapgl(sapgl, itemcat) ON debitsapgl.itemcat=i.ste_cswnitemcat
LEFT JOIN (
	VALUES('432101', 'SG_OEM_PWR'),
		  ('432101', 'SG_OEM_COM'),
		  ('432101', 'SG_OEM_SYS'),
		  ('432101', 'SG_OEM_RST'),
		  ('432101', 'SG_OEM_SIG'),
		  ('432101', 'SG_OEM_PWY'),
		  ('432101', 'SG_OEM_PMT'),
	      ('431150', 'SG_CONSUME'),
		  ('432101', 'SG_OEM_LRT')
) AS creditsapgl(sapgl, itemcat) ON creditsapgl.itemcat=i.ste_cswnitemcat
WHERE 1=1
	AND mut.ISSUETYPE='ISSUE'	--49
	AND i.STE_CSWNITEMCAT <> 'SG_FAS'
	--AND mut.ACTUALCOST >= 0.02
	--AND mut.ACTUALDATE BETWEEN '2023-01-01' AND '2023-12-31'
	--AND coa.GLCOMP02!=m.STE_CSWNCC
	--AND m.MRNUM='MR00432425'
	--AND ret.QUANTITY>0
	--AND m.WONUM IS NOT NULL 
	--AND m.STE_REMARKS IS NOT null
;

ALL MIGRATION.STE_FINISH_PATCH('20250426-01-BIRT-REPORT');
