--#SET TERMINATOR /

CREATE OR REPLACE PROCEDURE MIGRATION.STE_START_PATCH(
	IN P_PATCHNAME VARCHAR(50)
)
LANGUAGE SQL
SPECIFIC STE_START_PATCH
BEGIN

	INSERT INTO MIGRATION.ste_migration_logs (
	 package_name
	 ,version
	 ,start_date
	 ,hostname 
	)
	VALUES (
	 P_PATCHNAME
	 , '1.0'
	 , add_hours(CURRENT_TIMESTAMP,8)
	 , NULL
	);

END;
/

--#SET TERMINATOR /

CREATE OR REPLACE PROCEDURE MIGRATION.STE_FINISH_PATCH(
	IN P_PATCHNAME VARCHAR(50)
)
LANGUAGE SQL
SPECIFIC STE_FINISH_PATCH
BEGIN
	DECLARE V_MAX INTEGER DEFAULT 0;
	
	SET V_MAX = (SELECT ID FROM MIGRATION.ste_migration_logs WHERE package_name=P_PATCHNAME ORDER BY ID DESC LIMIT 1);
	
	UPDATE MIGRATION.ste_migration_logs 
	SET
	 end_date = add_hours(CURRENT_TIMESTAMP,8)
	 , success = 1
	WHERE id = V_MAX
	;

END;
/

--#SET TERMINATOR ;

CALL MIGRATION.STE_START_PATCH('20250406-02-RFQ-CONVERSION');

-- update inventory issue unit
MERGE INTO MAXIMO.INVENTORY A
USING (
	SELECT a.inventoryid, a.issueunit AS orig_issueunit, b.issueunit
	FROM maximo.inventory a
	JOIN maximo.item b ON b.itemnum=a.itemnum
	WHERE a.issueunit IS NULL AND b.issueunit IS NOT NULL
) B ON B.INVENTORYID=A.INVENTORYID
WHEN MATCHED THEN
UPDATE SET
	ISSUEUNIT=B.ISSUEUNIT
;

-- update rfqline order unit
MERGE INTO MAXIMO.RFQLINE A
USING (
	SELECT a.rfqlineid, a.orderunit AS orig_orderunit, b.orderunit
	FROM maximo.rfqline a
	JOIN maximo.item b ON b.itemnum=a.itemnum
	WHERE a.orderunit IS NULL AND b.orderunit IS NOT NULL
) B ON B.RFQLINEID=A.RFQLINEID
WHEN MATCHED THEN
UPDATE SET
	ORDERUNIT=B.ORDERUNIT
;

-- update rfqline conversion
MERGE INTO maximo.rfqline a
USING (
	SELECT a.rfqlineid, a.orderunit, b.issueunit, coalesce(c.conversion, 1) AS conversion
	FROM maximo.rfqline a
	JOIN maximo.item b ON b.itemnum=a.itemnum
	LEFT JOIN maximo.conversion c ON c.frommeasureunit=a.orderunit AND c.tomeasureunit=b.issueunit
) b ON b.rfqlineid=a.rfqlineid
WHEN MATCHED THEN 
UPDATE SET 
	conversion=b.conversion
;

-- create all item in CW
DELETE FROM MAXIMO.INVENTORY WHERE STE_MIGRATIONID=20250406 AND STE_MIGRATIONTS=-1;
DELETE FROM MAXIMO.INVBALANCES WHERE STE_MIGRATIONID=20250406 AND STE_MIGRATIONTS=-1;
DELETE FROM MAXIMO.INVCOST WHERE STE_MIGRATIONID=20250406 AND STE_MIGRATIONTS=-1;

INSERT INTO MAXIMO.INVBALANCES
(
	ITEMNUM, RECONCILED, SOURCESYSID, 
	OWNERSYSID, EXTERNALREFID, SENDERSYSID, ORGID, SITEID, ITEMSETID, CONDITIONCODE, 
	STAGINGBIN, STAGEDCURBAL, NEXTPHYCNTDATE, PRE_CURBAL, PRE_CALCCURBAL, PRE_CURBALCHANGE, 
	PRE_DATE, PICKEDQTY, 
	LOCATION, BINNUM, LOTNUM, CURBAL, PHYSCNT, PHYSCNTDATE, 
	INVBALANCESID, 
	STE_MIGRATIONDATE, STE_MIGRATIONID, STE_MIGRATIONTS
)
SELECT 
	C.ITEMNUM, C.RECONCILED, C.SOURCESYSID, 
	C.OWNERSYSID, C.EXTERNALREFID, C.SENDERSYSID, C.ORGID, C.SITEID, C.ITEMSETID, C.CONDITIONCODE, 
	C.STAGINGBIN, C.STAGEDCURBAL, C.NEXTPHYCNTDATE, C.PRE_CURBAL, C.PRE_CALCCURBAL, C.PRE_CURBALCHANGE, 
	C.PRE_DATE, C.PICKEDQTY, 
	'CW' AS LOCATION, NULL AS BINNUM, NULL AS LOTNUM, 0 AS CURBAL, 0 AS PHYSCNT, NULL AS PHYSCNTDATE, 
	X.MAX_ID + ROW_NUMBER() OVER (ORDER BY A.INVENTORYID) AS INVBALANCESID, 
	ADD_HOURS(CURRENT_TIMESTAMP,8) AS STE_MIGRATIONDATE, 20250406 AS STE_MIGRATIONID, -1 AS STE_MIGRATIONTS
FROM (
	SELECT A.*
		, ROW_NUMBER() OVER (PARTITION BY A.ITEMNUM ORDER BY INVENTORYID DESC) RN
	FROM maximo.inventory a
	WHERE A.location!='CW'
) A
LEFT JOIN maximo.inventory B ON B.itemnum=A.itemnum AND B.location='CW'
JOIN (
	SELECT C.*
		, ROW_NUMBER() OVER (PARTITION BY C.ITEMNUM, C.LOCATION ORDER BY C.INVBALANCESID DESC) AS RN
	FROM MAXIMO.INVBALANCES C 
) C ON C.RN=1 AND C.ITEMNUM=A.ITEMNUM AND C.LOCATION=A.LOCATION
JOIN (
	SELECT MAX(INVBALANCESID) AS MAX_ID FROM MAXIMO.INVBALANCES
) X ON 1=1
WHERE A.RN=1 AND b.inventoryid IS NULL --AND c.invbalancesid IS NULL
;

INSERT INTO MAXIMO.INVCOST
(
	ITEMNUM, CONDITIONCODE, CONDRATE, ITEMSETID, SITEID, STDCOST, AVGCOST, LASTCOST, 
	GLACCOUNT, CONTROLACC, SHRINKAGEACC, INVCOSTADJACC, ORGID, STE_COSC, 
	LOCATION, 
	INVCOSTID, 
	STE_MIGRATIONDATE, STE_MIGRATIONID, STE_MIGRATIONTS
)
SELECT 
	C.ITEMNUM, C.CONDITIONCODE, C.CONDRATE, C.ITEMSETID, C.SITEID, C.STDCOST, C.AVGCOST, C.LASTCOST, 
	C.GLACCOUNT, C.CONTROLACC, C.SHRINKAGEACC, C.INVCOSTADJACC, C.ORGID, C.STE_COSC, 
	'CW' AS LOCATION, 
	X.MAX_ID + ROW_NUMBER() OVER (ORDER BY A.INVENTORYID) AS INVCOSTID, 
	ADD_HOURS(CURRENT_TIMESTAMP,8) AS STE_MIGRATIONDATE, 20250406 AS STE_MIGRATIONID, -1 AS STE_MIGRATIONTS
FROM (
	SELECT A.*
		, ROW_NUMBER() OVER (PARTITION BY A.ITEMNUM ORDER BY INVENTORYID DESC) RN
	FROM maximo.inventory a
	WHERE A.location!='CW'
) A
LEFT JOIN maximo.inventory B ON B.itemnum=A.itemnum AND B.location='CW'
JOIN (
	SELECT C.*
		, ROW_NUMBER() OVER (PARTITION BY C.ITEMNUM, C.LOCATION ORDER BY C.INVCOSTID DESC) AS RN
	FROM MAXIMO.INVCOST C 
) C ON C.RN=1 AND C.ITEMNUM=A.ITEMNUM AND C.LOCATION=A.LOCATION
JOIN (
	SELECT MAX(INVCOSTID) AS MAX_ID FROM MAXIMO.INVCOST
) X ON 1=1
WHERE A.RN=1 AND b.inventoryid IS NULL
;

INSERT INTO MAXIMO.INVENTORY
(
	ITEMSETID, MANUFACTURER, MODELNUM, ORDERUNIT, SHRINKAGEACC, SSTOCK, 
	VENDOR, ABCTYPE, CATALOGCODE, CONTROLACC, GLACCOUNT, INVCOSTADJACC, 
	ISSUEUNIT, ORGID, SITEID, SOURCESYSID, OWNERSYSID, EXTERNALREFID, 
	CATEGORY, CCF, DELIVERYTIME, ISSUE1YRAGO, ISSUE2YRAGO, ISSUE3YRAGO, ISSUEYTD, 
	ITEMNUM, MAXLEVEL, MINLEVEL, ORDERQTY, SENDERSYSID,  
	INTERNAL, DFLTSTAGEBIN, RECEIPTTOLERANCE, 
	REORDER, COSTTYPE, HARDRESISSUE, CONSIGNMENT, INVGENTYPE, FREQUENCY, FREQUNIT, 
	NEXTINVOICEDATE, CONSVENDOR, ICG, INVMTOL, INVPTOL, PLUSTIPTOL, PLUSTIMTOL, PLUSTICG, 
	STE_CAREQUIRED, STE_MAXQTY, STE_MINQTY, STE_WARRANTYENDDATE, 
	STE_CSWNSTKRISK, STE_CYCLICREORDER, STE_NODAYSCYCL, 
	STE_CSWNSUPPLIER, STE_CSWNPOPULATION, STE_DRAWINGNO, STE_FIRSTPROCDATE, 
	STE_REMARK, STE_MAXLEAD, STE_MINLEAD, STE_COSWINCC,
	STATUS, STATUSDATE, 
	BINNUM, LASTISSUEDATE, LOCATION, STORELOC, STORELOCSITEID, STE_TOTALCOST, STE_TOTALQUANTITY, HASLD, 
	INVENTORYID,
	STE_MIGRATIONDATE, STE_MIGRATIONID, STE_MIGRATIONTS
)
SELECT 
	a.ITEMSETID, a.MANUFACTURER, a.MODELNUM, a.ORDERUNIT, a.SHRINKAGEACC, a.SSTOCK, 
	a.VENDOR, a.ABCTYPE, a.CATALOGCODE, a.CONTROLACC, a.GLACCOUNT, a.INVCOSTADJACC, 
	a.ISSUEUNIT, a.ORGID, a.SITEID, a.SOURCESYSID, a.OWNERSYSID, a.EXTERNALREFID, 
	a.CATEGORY, a.CCF, a.DELIVERYTIME, a.ISSUE1YRAGO, a.ISSUE2YRAGO, a.ISSUE3YRAGO, a.ISSUEYTD, 
	a.ITEMNUM, a.MAXLEVEL, a.MINLEVEL, a.ORDERQTY, a.SENDERSYSID,  
	a.INTERNAL, a.DFLTSTAGEBIN, a.RECEIPTTOLERANCE, 
	a.REORDER, a.COSTTYPE, a.HARDRESISSUE, a.CONSIGNMENT, a.INVGENTYPE, a.FREQUENCY, a.FREQUNIT, 
	a.NEXTINVOICEDATE, a.CONSVENDOR, a.ICG, a.INVMTOL, a.INVPTOL, a.PLUSTIPTOL, a.PLUSTIMTOL, a.PLUSTICG, 
	a.STE_CAREQUIRED, a.STE_MAXQTY, a.STE_MINQTY, a.STE_WARRANTYENDDATE, 
	a.STE_CSWNSTKRISK, a.STE_CYCLICREORDER, a.STE_NODAYSCYCL, 
	a.STE_CSWNSUPPLIER, a.STE_CSWNPOPULATION, a.STE_DRAWINGNO, a.STE_FIRSTPROCDATE, 
	a.STE_REMARK, a.STE_MAXLEAD, a.STE_MINLEAD, a.STE_COSWINCC,
	a.STATUS, ADD_HOURS(CURRENT_TIMESTAMP,8) AS STATUSDATE, 
	NULL AS BINNUM, NULL AS LASTISSUEDATE, 'CW' AS LOCATION, NULL AS STORELOC, 
	'NEL' AS STORELOCSITEID, NULL AS STE_TOTALCOST, NULL AS STE_TOTALQUANTITY, 0 AS HASLD, 
	X.MAX_ID + ROW_NUMBER() OVER (ORDER BY A.INVENTORYID) AS INVENTORYID,
	ADD_HOURS(CURRENT_TIMESTAMP,8) AS STE_MIGRATIONDATE, 20250406 AS STE_MIGRATIONID, -1 AS STE_MIGRATIONTS
FROM (
	SELECT A.*
		, ROW_NUMBER() OVER (PARTITION BY A.ITEMNUM ORDER BY INVENTORYID DESC) RN
	FROM maximo.inventory a
	WHERE A.location!='CW'
) A
LEFT JOIN maximo.inventory b ON b.itemnum=a.itemnum AND b.location='CW'
JOIN (
	SELECT MAX(INVENTORYID) AS MAX_ID FROM MAXIMO.INVENTORY
) X ON 1=1
WHERE A.RN=1 AND b.inventoryid IS NULL
;

CALL MIGRATION.STE_UPDATE_SEQ('INVBALANCESSEQ', 'INVBALANCES', 'INVBALANCESID');
CALL MIGRATION.STE_UPDATE_SEQ('INVCOSTSEQ', 'INVCOST', 'INVCOSTID');
CALL MIGRATION.STE_UPDATE_SEQ('INVENTORYSEQ', 'INVENTORY', 'INVENTORYID');

CALL MIGRATION.STE_FINISH_PATCH('20250406-02-RFQ-CONVERSION');