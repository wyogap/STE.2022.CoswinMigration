CALL MIGRATION.STE_START_PATCH('20250811-ITEM-DESCRIPTION');

-- 
-- BRING TABLE MIGRATION.PATCH_20250811_ITEM_DESCRIPTION FROM ON-PREM
-- BRING TABLE MIGRATION.PATCH_20250811_NSITEM_DESCRIPTION FROM ON-PREM
-- 

-- BACKUP CURRENT IMAGE CATALOG (IF ANY)
DROP TABLE "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION";
CREATE TABLE "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION"  (
	  "ITEMID" BIGINT NOT NULL , 
	  "ITEMNUM" VARCHAR(30) NOT NULL,
	  "DESCRIPTION" VARCHAR(200 OCTETS) NOT NULL , 
	  "NEW_DESCRIPTION" VARCHAR(200 OCTETS) NOT NULL
 )   
 ORGANIZE BY ROW;

INSERT INTO "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" (
	ITEMID, ITEMNUM, DESCRIPTION, NEW_DESCRIPTION
)
SELECT B.ITEMID, B.ITEMNUM, B.DESCRIPTION, A.DESCRIPTION AS NEW_DESCRIPTION
FROM MIGRATION.PATCH_20250811_ITEM_DESCRIPTION A
JOIN MAXIMO.ITEM B ON B.STE_MIGRATIONSOURCE='ITEM_' AND B.STE_MIGRATIONID=A.PK_ITEM
WHERE LENGTH(A.DESCRIPTION)>90 AND A.DESCRIPTION!=B.DESCRIPTION
;

INSERT INTO "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" (
	ITEMID, ITEMNUM, DESCRIPTION, NEW_DESCRIPTION
)
SELECT B.ITEMID, B.ITEMNUM, B.DESCRIPTION, A.DESCRIPTION AS NEW_DESCRIPTION
FROM MIGRATION.PATCH_20250811_NSITEM_DESCRIPTION A
JOIN MAXIMO.ITEM B ON (B.STE_MIGRATIONSOURCE='NSITEM-ITEM' OR B.STE_MIGRATIONSOURCE='NSITEM-STDSERVICE') AND B.STE_MIGRATIONID=A.PK_NSITEM
WHERE LENGTH(A.DESCRIPTION)>90 AND A.DESCRIPTION!=B.DESCRIPTION
;

-- ITEM
MERGE INTO MAXIMO.ITEM A
USING (
	SELECT B.ITEMID, B.DESCRIPTION, B.NEW_DESCRIPTION
	FROM "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B
) B ON B.ITEMID=A.ITEMID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- CONTRACTLINE
MERGE INTO MAXIMO.CONTRACTLINE A
USING (
	SELECT A.CONTRACTLINEID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.CONTRACTLINE A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.CONTRACTLINEID=A.CONTRACTLINEID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- PRLINE
MERGE INTO MAXIMO.PRLINE A
USING (
	SELECT A.PRLINEID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.PRLINE A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.PRLINEID=A.PRLINEID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- POLINE
MERGE INTO MAXIMO.POLINE A
USING (
	SELECT A.POLINEID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.POLINE A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.POLINEID=A.POLINEID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- RFQLINE
MERGE INTO MAXIMO.RFQLINE A
USING (
	SELECT A.RFQLINEID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.RFQLINE A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.RFQLINEID=A.RFQLINEID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- QUOTATIONLINE
MERGE INTO MAXIMO.QUOTATIONLINE A
USING (
	SELECT A.QUOTATIONLINEID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.QUOTATIONLINE A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.QUOTATIONLINEID=A.QUOTATIONLINEID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- INVOICELINE
MERGE INTO MAXIMO.INVOICELINE A
USING (
	SELECT A.INVOICELINEID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.INVOICELINE A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.INVOICELINEID=A.INVOICELINEID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- INVUSELINE
MERGE INTO MAXIMO.INVUSELINE A
USING (
	SELECT A.INVUSELINEID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.INVUSELINE A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.INVUSELINEID=A.INVUSELINEID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- MATRECTRANS
MERGE INTO MAXIMO.MATRECTRANS A
USING (
	SELECT A.MATRECTRANSID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.MATRECTRANS A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.MATRECTRANSID=A.MATRECTRANSID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- MATUSETRANS
MERGE INTO MAXIMO.MATUSETRANS A
USING (
	SELECT A.MATUSETRANSID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.MATUSETRANS A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.MATUSETRANSID=A.MATUSETRANSID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- SERVRECTRANS
MERGE INTO MAXIMO.SERVRECTRANS A
USING (
	SELECT A.SERVRECTRANSID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.SERVRECTRANS A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.SERVRECTRANSID=A.SERVRECTRANSID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

-- WPITEM
MERGE INTO MAXIMO.WPITEM A
USING (
	SELECT A.WPITEMID, A.ITEMNUM, A.DESCRIPTION, B.NEW_DESCRIPTION, A.STE_MIGRATIONID
	FROM MAXIMO.WPITEM A 
	JOIN "MIGRATION"."BAK_20250811_ITEM_DESCRIPTION" B ON B.ITEMNUM=A.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL 
		AND A.DESCRIPTION!=B.NEW_DESCRIPTION
) B ON B.WPITEMID=A.WPITEMID
WHEN MATCHED THEN
UPDATE SET
	A.DESCRIPTION=B.NEW_DESCRIPTION
;

CALL MIGRATION.STE_FINISH_PATCH('20250811-ITEM-DESCRIPTION');