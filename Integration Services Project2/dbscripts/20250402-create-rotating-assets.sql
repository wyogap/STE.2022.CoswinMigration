DROP TABLE "MIGRATION"."PATCH_20250402_ROTATING_ASSETS" IF EXISTS;
CREATE TABLE "MIGRATION"."PATCH_20250402_ROTATING_ASSETS"  (
		  "ID" BIGINT NOT NULL GENERATED BY DEFAULT AS IDENTITY (  
		    START WITH +1  
		    INCREMENT BY +1  
		    MINVALUE +1  
		    MAXVALUE +9223372036854775807  
		    NO CYCLE  
		    CACHE 20  
		    NO ORDER ) , 
		  "ITEMNUM" VARCHAR(30 OCTETS), 
		  "DESCRIPTION" VARCHAR(200 OCTETS), 
		  "LOTTYPE" VARCHAR(8 OCTETS), 
		  "ISCRITICAL" INTEGER, 
		  "LINE" VARCHAR(8 OCTETS), 
		  "SYSTEM" VARCHAR(8 OCTETS), 
		  "SUBSYSTEM" VARCHAR(8 OCTETS), 
		  "LOCATION" VARCHAR(16 OCTETS), 
		  "AVGCOST" DECIMAL(13,5), 
		  "STDCOST" DECIMAL(13,5), 
		  "LASTCOST" DECIMAL(13,5), 
		  "CURBAL" INTEGER, 
		  "ASSETCNT" INTEGER, 
		  "TOCREATE" INTEGER 
	)   
	IN "USERSPACE1"  
	ORGANIZE BY ROW;

-- GET WHAT TO CREATE
INSERT INTO "MIGRATION"."PATCH_20250402_ROTATING_ASSETS" (
	ITEMNUM,DESCRIPTION,LOTTYPE,LOCATION,AVGCOST,STDCOST,LASTCOST,CURBAL,ASSETCNT,TOCREATE
	,ISCRITICAL,LINE,SYSTEM,SUBSYSTEM
)
SELECT a.itemnum, a.description, a.lottype, b.location, d.avgcost, d.stdcost, d.lastcost, b.curbal, COALESCE(c.cnt,0) AS assetcnt
	, (b.curbal - COALESCE(c.cnt,0)) AS tocreate 
	, a.ste_is_critical, a.ste_line, a.ste_system, a.ste_subsystem
FROM maximo.item a
join maximo.invbalances b on b.itemnum=a.itemnum
LEFT JOIN (
	SELECT a.itemid, a.itemnum, b.location, count(*) AS cnt
	FROM maximo.item a
	JOIN maximo.asset b ON b.itemnum=a.itemnum
	--WHERE a.itemnum='A51-ATC1-0001-0005XX'
	GROUP BY a.itemid, a.itemnum, b.location
) c ON c.itemid=a.itemid AND c.location=b.location
JOIN maximo.invcost d ON d.itemnum=a.itemnum AND d.location=b.location
WHERE a.rotating=1
	AND b.curbal>0
ORDER BY a.itemnum;

--#SET TERMINATOR /

CREATE OR REPLACE PROCEDURE MIGRATION.STE_PATCH_20250402_ROTATING_ASSETS()
LANGUAGE SQL
SPECIFIC STE_PATCH_20250402_ROTATING_ASSETS
BEGIN
    -- version 1.0
    DECLARE V_VERSION VARCHAR(10) DEFAULT 'v1.0';

	DECLARE V_ID BIGINT;
	DECLARE V_ITEMNUM VARCHAR(30);
	DECLARE V_TOCREATE INTEGER;
	DECLARE v_counter INTEGER DEFAULT 0;
	
	DECLARE cursor1 CURSOR FOR
		SELECT ID, ITEMNUM, TOCREATE FROM MIGRATION.PATCH_20250402_ROTATING_ASSETS WHERE TOCREATE>0;
	
	DECLARE CONTINUE HANDLER FOR NOT FOUND
		SET v_counter = -1;
	
	-- LOGGING
	DELETE FROM MIGRATION.STE_MIGRATION_DEBUG_LOG WHERE PACKAGE_NAME='PATCH-20250402-ROTATING-ASSETS';
	
	-- CLEANUP
	DELETE FROM MAXIMO.ASSET WHERE STE_MIGRATIONID=20250402 AND STE_MIGRATIONTS=-1;
	
	OPEN cursor1;
	
	fetch_loop:
	LOOP
		SET v_counter = 0;
	
		FETCH FROM cursor1 INTO V_ID, V_ITEMNUM, V_TOCREATE;
		
		IF (v_counter =-1) THEN LEAVE fetch_loop; END IF;
	
		INSERT INTO maximo.asset(
			ASSETNUM,
			ASSETID,
			ASSETUID,
			ITEMNUM, LOCATION, DESCRIPTION, STATUS,
			PURCHASEPRICE,
			REPLACECOST,
			TOTALCOST,
			YTDCOST,
			BUDGETCOST,
			ISRUNNING,
			UNCHARGEDCOST,
			TOTUNCHARGEDCOST,
			TOTDOWNTIME,
			CHANGEDATE,
			CHANGEBY,
			INVCOST,
			CHILDREN,
			DISABLED,
			SITEID,
			ORGID,
			AUTOWOGEN,
			MAINTHIERCHY,
			MOVED,
			LANGCODE,
			HASLD,
			ISLINEAR,
			RETURNEDTOVENDOR,
			TLOAMPARTITION,
			PLUSCISCONTAM,
			PLUSCISINHOUSECAL,
			PLUSCISMTE,
			PLUSCPMEXTDATE,
			PLUSCSOLUTION,
			ISCALIBRATION,
			PLUSTMPRES,
			PLUSTREPORTLEVEL,
			PLUSTACCEPTWARR,
			PLUSTLTRES,
			PLUSTTOTALMPREVENUE,
			PLUSTISCONSIST,
			STE_CALEQUIP,
			STE_CALREQUIRE,
			STE_CRITICALASSET,
			STE_KPI,
			STE_LRU,
			STE_OPS,
			STE_CSWNWPONCMWO,
			STE_LINE, STE_SYSTEM, STE_SUBSYSTEM,
			STE_MIGRATIONID, STE_MIGRATIONDATE, STE_MIGRATIONTS
		)
		SELECT 
			A.ASSETNUM,
			A.ASSETID,
			A.ASSETUID,
			A.ITEMNUM, A.LOCATION, A.DESCRIPTION, 'OPERATING' AS STATUS,
			0 AS PURCHASEPRICE,
			0 AS REPLACECOST,
			0 AS TOTALCOST,
			0 AS YTDCOST,
			0 AS BUDGETCOST,
			1 AS ISRUNNING,
			0 AS UNCHARGEDCOST,
			0 AS TOTUNCHARGEDCOST,
			0 AS TOTDOWNTIME,
			ADD_HOURS(CURRENT_TIMESTAMP, 8) AS CHANGEDATE,
			'MAXADMIN' AS CHANGEBY,
			A.AVGCOST AS INVCOST,
			0 AS CHILDREN,
			0 AS DISABLED,
			'NEL' AS SITEID,
			'SBST' AS ORGID,
			0 AS AUTOWOGEN,
			0 AS MAINTHIERCHY,
			0 AS MOVED,
			'EN' AS LANGCODE,
			0 AS HASLD,
			0 AS ISLINEAR,
			0 AS RETURNEDTOVENDOR,
			0 AS TLOAMPARTITION,
			0 AS PLUSCISCONTAM,
			0 AS PLUSCISINHOUSECAL,
			0 AS PLUSCISMTE,
			0 AS PLUSCPMEXTDATE,
			0 AS PLUSCSOLUTION,
			0 AS ISCALIBRATION,
			0 AS PLUSTMPRES,
			0 AS PLUSTREPORTLEVEL,
			0 AS PLUSTACCEPTWARR,
			0 AS PLUSTLTRES,
			0 AS PLUSTTOTALMPREVENUE,
			0 AS PLUSTISCONSIST,
			0 AS STE_CALEQUIP,
			0 AS STE_CALREQUIRE,
			A.ISCRITICAL AS STE_CRITICALASSET,
			0 AS STE_KPI,
			0 AS STE_LRU,
			0 AS STE_OPS,
			0 AS STE_CSWNWPONCMWO,
			A.LINE AS STE_LINE,
			A.SYSTEM AS STE_SYSTEM,
			A.SUBSYSTEM AS STE_SUBSYSTEM,
			20250402 AS STE_MIGRATIONID,
			ADD_HOURS(CURRENT_TIMESTAMP, 8) AS STE_MIGRATIONDATE,
			-1 AS STE_MIGRATIONTS
		FROM (
			SELECT
				B.N
				, CONCAT('A1',LPAD(C.MAX_ASSETNUM + B.N + 1,11,'0')) AS ASSETNUM
				, C.MAX_ASSETUID + B.N + 1 AS ASSETUID
				, C.MAX_ASSETID + B.N + 1 AS ASSETID
				, A.ITEMNUM, A.LOCATION, A.AVGCOST, A.LASTCOST, A.TOCREATE
				, A.ISCRITICAL, A.LINE, A.SYSTEM, A.SUBSYSTEM, A.DESCRIPTION
			FROM MIGRATION.PATCH_20250402_ROTATING_ASSETS A
			JOIN (
				SELECT
				   	n1.n + (10*n10.n) + (100*n100.n) + (1000*n1000.n) AS n
				FROM                
					(VALUES(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)) AS n1(n)
				CROSS JOIN
					(VALUES(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)) AS n10(n)
				CROSS JOIN
				    (VALUES(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)) AS n100(n)
				CROSS JOIN
				    (VALUES(0),(1),(2),(3),(4),(5),(6),(7),(8),(9)) AS n1000(n)
				ORDER BY N
			) B ON B.N<A.TOCREATE
			JOIN (
				SELECT MAX(CAST(RIGHT(ASSETNUM,11) AS BIGINT)) AS MAX_ASSETNUM
					, MAX(ASSETUID) AS MAX_ASSETUID
					, MAX(ASSETID) AS MAX_ASSETID FROM MAXIMO.ASSET 
			) C ON 1=1
			WHERE 1=1
				AND A.ID=V_ID
		) A
		;
		
		-- LOGGING
		INSERT INTO MIGRATION.STE_MIGRATION_DEBUG_LOG (PACKAGE_NAME,LOG_TYPE,COL1,COL2)
		VALUES('PATCH-20250402-ROTATING-ASSETS','CREATED',V_ITEMNUM,V_TOCREATE);
		
	END LOOP fetch_loop;
	
	CLOSE cursor1;
	
END;
/

--#SET TERMINATOR ;

-- CREATE THE ASSET
CALL MIGRATION.STE_PATCH_20250402_ROTATING_ASSETS();

-- CNT: 11383
-- SELECT COUNT(*) AS CNT FROM MAXIMO.ASSET WHERE STE_MIGRATIONID=20250402 AND STE_MIGRATIONTS=-1;

-- UPDATE ASSETCODE
MERGE INTO MAXIMO.ASSET AS A
USING (
	SELECT assetid, assetuid, assetnum, ste_system, ste_subsystem, assettype
		, concat(ste_system,
			CONCAT('/',
			concat(COALESCE(ste_subsystem,''),
			CONCAT('/',
			concat(COALESCE(assettype,''),
			CONCAT('/', assetnum)
		  ))))) AS assetcode
	FROM MAXIMO.ASSET a 
	WHERE ste_system IS NOT null AND STE_MIGRATIONID=20250402 AND STE_MIGRATIONTS=-1
) B ON B.assetuid=A.assetuid
WHEN MATCHED THEN
UPDATE SET 
	ste_assetcode=B.assetcode
;

-- CLEAN UP
DELETE FROM maximo.PLUSTASSETALIAS WHERE STE_MIGRATIONID=20250402;

-- PLUSTASSETALIAS
INSERT INTO maximo.PLUSTASSETALIAS (
	PLUSTASSETALIASID, ALIAS, ISDEFAULT, ISACTIVE, ASSETNUM, ORGID, SITEID, ISASSETNUM, DESCRIPTION, LANGCODE, HASLD
	, STE_MIGRATIONID, STE_MIGRATIONDATE)
SELECT 
	b.max_id + ROW_NUMBER() OVER (ORDER BY A.ASSETUID) AS PLUSTASSETALIASID
	, a.assetnum, '0', '1', a.assetnum, a.orgid, a.siteid, '1', 'Maximo Asset Number', a.langcode, a.hasld
	, 20250402 AS ste_migrationid, ADD_HOURS(CURRENT_TIMESTAMP, 8) AS ste_migrationdate
FROM maximo.asset a
JOIN (
	SELECT isnull(max(PLUSTASSETALIASID),0) AS max_id FROM maximo.PLUSTASSETALIAS
) b ON 1=1
WHERE a.STE_MIGRATIONID=20250402 AND a.STE_MIGRATIONTS=-1
ORDER BY a.ASSETUID
;

-- CLEAN UP
DELETE FROM maximo.PLUSTASSETSTHIST WHERE STE_MIGRATIONID=20250402;

-- PLUSTASSETSTHIST
INSERT INTO maximo.PLUSTASSETSTHIST (
	PLUSTASSETSTHISTID, STATUS, CHANGEDATE, CHANGEBY, INHERITED, ORGID, SITEID, ASSETID
	, STE_MIGRATIONID, STE_MIGRATIONDATE
)
SELECT 
	b.max_id + ROW_NUMBER() OVER (ORDER BY A.ASSETUID) AS PLUSTASSETSTHISTID
	, a.status, a.changedate, a.changeby, '1' AS inherited
	, a.orgid, a.siteid, a.assetid
	, 20250402 AS ste_migrationid, ADD_HOURS(CURRENT_TIMESTAMP, 8) AS ste_migrationdate
FROM maximo.asset a
JOIN (
	SELECT isnull(max(PLUSTASSETSTHISTID),0) AS max_id FROM maximo.PLUSTASSETSTHIST
) b ON 1=1
LEFT JOIN maximo.PLUSTASSETSTHIST x ON x.assetid=a.assetid AND x.status=a.status
WHERE a.STE_MIGRATIONID=20250402 AND a.STE_MIGRATIONTS=-1
	AND x.PLUSTASSETSTHISTID IS null
ORDER BY a.assetid

-- CLEAN UP
DELETE FROM maximo.ASSETANCESTOR WHERE STE_MIGRATIONID=20250402 AND STE_MIGRATIONTS=-1;

-- ASSETANCESTOR
INSERT INTO MAXIMO.ASSETANCESTOR(
	ASSETANCESTORID, ASSETNUM, ANCESTOR, HIERARCHYLEVELS, ORGID, SITEID
	, STE_MIGRATIONID, STE_MIGRATIONDATE, STE_MIGRATIONTS
)
SELECT 
	b.max_id + ROW_NUMBER() OVER (ORDER BY A.ASSETUID) AS ASSETANCESTORID
	, A.ASSETNUM AS ASSETNUM, A.ASSETNUM AS ANCESTOR, 0 AS HIERARCHYLEVELS
	, a.orgid, a.siteid
	, 20250402 AS ste_migrationid, ADD_HOURS(CURRENT_TIMESTAMP, 8) AS ste_migrationdate
	, -1 AS STE_MIGRATIONTS
FROM maximo.asset a
JOIN (
	SELECT isnull(max(ASSETANCESTORID),0) AS max_id FROM maximo.ASSETANCESTOR
) b ON 1=1
WHERE a.STE_MIGRATIONID=20250402 AND a.STE_MIGRATIONTS=-1
ORDER BY a.assetid

-- CLEAN UP
DELETE FROM maximo.ASSETTRANS WHERE STE_MIGRATIONID=20250402 AND STE_MIGRATIONTS=-1;

-- ASSETTRANS
INSERT INTO MAXIMO.ASSETTRANS(
	ASSETTRANSID, ASSETNUM, DATEMOVED, FROMLOC, TOLOC, TRANSDATE, ENTERBY
	, SITEID, ORGID, TOSITEID, TOORGID, ASSETID, TRANSTYPE, POSITEID
	, STE_MIGRATIONID, STE_MIGRATIONDATE, STE_MIGRATIONTS
)
SELECT 
	B.MAX_ID + ROW_NUMBER() OVER (ORDER BY A.ASSETUID) AS ASSETTRANSID
	, A.ASSETNUM, ADD_HOURS(CURRENT_TIMESTAMP,8) AS DATEMOVED
	, NULL AS FROMLOC, A.LOCATION AS TOLOC
	, ADD_HOURS(CURRENT_TIMESTAMP,8) AS TRANSDATE, 'MAXADMIN' AS ENTERBY
	, A.SITEID, A.ORGID, A.SITEID AS TOSITEID, A.ORGID AS TOORGID
	, A.ASSETID, 'MOVED' AS TRANSTYPE, A.SITEID AS POSITEID
	, 20250402 AS ste_migrationid, ADD_HOURS(CURRENT_TIMESTAMP, 8) AS ste_migrationdate
	, -1 AS STE_MIGRATIONTS
FROM MAXIMO.ASSET A
JOIN (
	SELECT isnull(max(ASSETTRANSID),0) AS max_id FROM maximo.ASSETTRANS
) b ON 1=1
WHERE a.STE_MIGRATIONID=20250402 AND a.STE_MIGRATIONTS=-1
ORDER BY a.assetid
;
