CALL MIGRATION.STE_START_PATCH('20250427-01-WOACTIVITY');

--CREATE TABLE "MAXIMO"."CSWN_WOACTIVITY" 
--(	
--   	"PK_WIP_WA" BIGINT, 
--	"TIMESTAMP" BIGINT, 
--	--"WO_WA_40" BIGINT, 
--	"WA_NO" INTEGER, 
--	"WA_ACT" VARCHAR(10), 
--	"WA_EXEC_STATUS" INTEGER, 
--	"WA_DT" BIGINT, 
--	"WA_DURN" DECIMAL(18,6), 
--	"WA_WO_GEN" BIGINT, 
--	"WA_MULTIPLE" INTEGER, 
--	"WA_PLANNED" INTEGER, 
--	"WA_EQCD" VARCHAR(20), 
--	"WA_ELEM" VARCHAR(40), 
--	"WA_VAL1" DECIMAL(18,6), 
--	"WA_VAL2" DECIMAL(18,6), 
--	"WA_OP_TYPE" VARCHAR(20), 
--	"WA_DEVICE" VARCHAR(20), 
--	"WA_EQP_STAT" VARCHAR(20), 
--	"WA_UNIT1" VARCHAR(6), 
--	"WA_UNIT2" VARCHAR(6),
--	ACT_DESC VARCHAR(104),
--	PK_EQP_TOPO BIGINT,
--	EQ_LEVL INTEGER,
--	PK_WIP_WO BIGINT,
--	WO_WOID VARCHAR(10),
--	LABORS INTEGER,
--	LABORS_WKHR DECIMAL(18,6)
--)
-- IN "MAXDATA"  
-- ORGANIZE BY ROW
--;

-- BRING MAXIMO.CSWN_WOACTIVITY FROM ON-PREM

-- INSERT WOACTIVITY
INSERT INTO MAXIMO.WORKORDER (
	WONUM
	, PARENT
	, STATUS
	, STATUSDATE
	, WORKTYPE
	, DESCRIPTION
	, ASSETNUM
	, LOCATION
	, CHANGEBY
	, CHANGEDATE
	, ESTDUR
	, ESTSERVCOST
	, ESTLABHRS
	, ESTMATCOST
	, ESTLABCOST
	, ESTTOOLCOST
	, ACTSERVCOST
	, ACTLABHRS
	, ACTMATCOST
	, ACTLABCOST
	, ACTTOOLCOST
	, HASCHILDREN
	, OUTLABCOST
	, OUTMATCOST
	, OUTTOOLCOST
	, DISABLED
	, HISTORYFLAG
	, CONTRACT
	, WOPRIORITY
	, TARGCOMPDATE
	, TARGSTARTDATE
	, REPORTEDBY
	, REPORTDATE
	, DOWNTIME
	, ACTSTART
	, ACTFINISH
	, SCHEDSTART
	, SCHEDFINISH
	, CHARGESTORE
	, FAILURECODE
	, GLACCOUNT
	, WOSEQUENCE
	, HASFOLLOWUPWORK
	, ORGID
	, SITEID
	, TASKID
	, ISTASK
	, WOCLASS
	, WOACCEPTSCHARGES
	, PARENTCHGSSTATUS
	, WORKORDERID
	, LANGCODE
	, WOGROUP
	, HASLD
	, ROUTE
	, JOBTASKID
	, WOISSWAP
	, NEWCHILDCLASS
	, SUSPENDFLOW
	, FLOWCONTROLLED
	, FLOWACTIONASSIST
	, IGNORESRMAVAIL
	, IGNOREDIAVAIL
	, ESTINTLABCOST
	, ESTINTLABHRS
	, ESTOUTLABCOST
	, ESTOUTLABHRS
	, ACTINTLABCOST
	, ACTINTLABHRS
	, ACTOUTLABCOST
	, ACTOUTLABHRS
	, ESTATAPPRLABCOST
	, ESTATAPPRLABHRS
	, ESTATAPPRINTLABCOST
	, ESTATAPPRINTLABHRS
	, ESTATAPPROUTLABCOST
	, ESTATAPPROUTLABHRS
	, ESTATAPPRMATCOST
	, ESTATAPPRTOOLCOST
	, ESTATAPPRSERVCOST
	, LASTCOPYLINKDATE
	, NESTEDJPINPROCESS
	, PLUSCISMOBILE
	, PLUSCJPREVNUM
	, PLUSCLOOP
	, DJPAPPLIED
	, INCTASKSINSCHED
	, REQASSTDWNTIME
	, APPTREQUIRED
	, AOS
	, AMS
	, LOS
	, LMS
	, REPAIRLOCFLAG
	, MILESTONE
	, PLUSTWARRPRESENT
	, PLUSTMALERT
	, PLUSTREPORD
	, PLUSTDRIVERREQ
	, PLUSTHASWARRANTY
	, PLUSTFULLCOVERAGE
	, PLUSTWORKASSIGN
	, PLUSTLOCK
	, PLUSTACTMPPRICE
	, PLUSTMPTYPE
	, SUPERVISOR
	, STE_MIGRATIONID
	, STE_MIGRATIONDATE
	, STE_KPIEQPTFAILURE
	, STE_LINE
	, STE_MAINTENTITY
	, STE_MOVE_SWAP
	, STE_OPSEQPTFAILURE
	, STE_SERVICEAFFECT2
	, STE_SERVICEAFFECT5
	, STE_SUBSYSTEM
	, STE_SYSTEM
	, STE_TAR_REQ
	, STE_TSRIMPOSED
	, STE_TSRIMPOSEDDATE
	, STE_TSRLIFTED
	, STE_TSRLIFTEDDATE
	, STE_CANNIBALISED
	, STE_FROMMOBILE
	, STE_MANPWRWAIT
	, STE_ISTRAINRESTRICT
	, STE_CSWNACTIONAUTH
	, STE_CSWNACTIONDESC
	, STE_CSWNAFCJRNUM
	, STE_CSWNEQPCODE
	, STE_CSWNIEXFL
	, STE_CSWNJBCLU
	, STE_CSWNJBCLUDESC
	, STE_CSWNJOBID
	, STE_CSWNPRJREF
	, STE_CSWNREQDESC
	, STE_CSWNREQUESTAUTH
	, STE_CSWNTOTCUMUNITS
	, STE_CSWNWOFNCTN
	, STE_CSWNWOID
	, STE_CSWNWOTYPE
	, STE_CSWNWOZONE
	, STE_CSWNCC
	, STE_MIGRATIONTS
	, STE_CSWNEQAUTHORITY
	, STE_REWORK
	, INTERRUPTIBLE
)
SELECT 
	CONCAT('WO', (X.MAX_WONUM + ROW_NUMBER() OVER (ORDER BY A.PK_WIP_WO, A.PK_WIP_WA))) AS WONUM
	, B.WONUM AS PARENT
	, B.STATUS
	, B.STATUSDATE
	, B.WORKTYPE
	, A.ACT_DESC AS DESCRIPTION
	, C.ASSETNUM AS ASSETNUM
	, B.LOCATION
	, B.CHANGEBY
	, B.CHANGEDATE
	, A.WA_DURN AS ESTDUR
	, 0 AS ESTSERVCOST
	, 0 AS ESTLABHRS
	, 0 AS ESTMATCOST
	, 0 AS ESTLABCOST
	, 0 AS ESTTOOLCOST
	, 0 AS ACTSERVCOST
	, 0 AS ACTLABHRS
	, 0 AS ACTMATCOST
	, 0 AS ACTLABCOST
	, 0 AS ACTTOOLCOST
	, 0 AS HASCHILDREN
	, 0 AS OUTLABCOST
	, 0 AS OUTMATCOST
	, 0 AS OUTTOOLCOST
	, 0 AS DISABLED
	, B.HISTORYFLAG
	, B.CONTRACT
	, B.WOPRIORITY
	, B.TARGCOMPDATE
	, B.TARGSTARTDATE
	, B.REPORTEDBY
	, B.REPORTDATE
	, B.DOWNTIME
	, CASE WHEN COALESCE(A.WA_DT,0)=0 THEN B.ACTSTART
		   ELSE to_date( '31-12-1899', 'DD-MM-YYYY' ) + COALESCE(A.WA_DT,0)
	  END AS ACTSTART
	, B.ACTFINISH
	, CASE WHEN COALESCE(A.WA_DT,0)=0 THEN B.ACTSTART
		   ELSE to_date( '31-12-1899', 'DD-MM-YYYY' ) + COALESCE(A.WA_DT,0)
	  END AS SCHEDSTART
	, B.SCHEDFINISH
	, B.CHARGESTORE
	, B.FAILURECODE
	, B.GLACCOUNT
	, 10 * ROW_NUMBER() OVER (PARTITION BY PK_WIP_WO ORDER BY A.PK_WIP_WA) AS WOSEQUENCE
	, 0 AS HASFOLLOWUPWORK
	, B.ORGID
	, B.SITEID
	, ROW_NUMBER() OVER (PARTITION BY PK_WIP_WO ORDER BY A.PK_WIP_WA) AS TAKSID
	, 1 AS ISTASK
	, 'ACTIVITY' AS WOCLASS
	, B.WOACCEPTSCHARGES
	, B.PARENTCHGSSTATUS
	, Y.MAX_ID + ROW_NUMBER() OVER (ORDER BY A.PK_WIP_WO, A.PK_WIP_WA) AS WORKORDERID
	, B.LANGCODE
	, B.WONUM AS WOGROUP
	, 0 AS HASLD
	, D.ROUTE AS ROUTE
	, NULL AS JOBTASKID
	, 0 AS WOISSWAP
	, 'ACTIVITY' AS NEWCHILDCLASS
	, 0 AS SUSPENDFLOW
	, 0 AS FLOWCONTROLLED
	, 0 AS FLOWACTIONASSIST
	, 0 AS IGNORESRMAVAIL
	, 0 AS IGNOREDIAVAIL
	, 0 AS ESTINTLABCOST
	, 0 AS ESTINTLABHRS
	, 0 AS ESTOUTLABCOST
	, 0 AS ESTOUTLABHRS
	, 0 AS ACTINTLABCOST
	, 0 AS ACTINTLABHRS
	, 0 AS ACTOUTLABCOST
	, 0 AS ACTOUTLABHRS
	, 0 AS ESTATAPPRLABCOST
	, 0 AS ESTATAPPRLABHRS
	, 0 AS ESTATAPPRINTLABCOST
	, 0 AS ESTATAPPRINTLABHRS
	, 0 AS ESTATAPPROUTLABCOST
	, 0 AS ESTATAPPROUTLABHRS
	, 0 AS ESTATAPPRMATCOST
	, 0 AS ESTATAPPRTOOLCOST
	, 0 AS ESTATAPPRSERVCOST
	, B.LASTCOPYLINKDATE
	, 0 AS NESTEDJPINPROCESS
	, 0 AS PLUSCISMOBILE
	, 0 AS PLUSCJPREVNUM
	, 0 AS PLUSCLOOP
	, 'NO' AS DJPAPPLIED
	, 0 AS INCTASKSINSCHED
	, B.REQASSTDWNTIME
	, B.APPTREQUIRED
	, B.AOS
	, B.AMS
	, B.LOS
	, B.LMS
	, B.REPAIRLOCFLAG
	, B.MILESTONE
	, 'N' AS PLUSTWARRPRESENT
	, 0 AS PLUSTMALERT
	, 0 AS PLUSTREPORD
	, 0 AS PLUSTDRIVERREQ
	, 'N' AS PLUSTHASWARRANTY
	, 0 AS PLUSTFULLCOVERAGE
	, 0 AS PLUSTWORKASSIGN
	, 0 AS PLUSTLOCK
	, 0 AS PLUSTACTMPPRICE
	, B.PLUSTMPTYPE
	, B.SUPERVISOR
	, A.PK_WIP_WA AS STE_MIGRATIONID
	, ADD_HOURS(CURRENT_TIMESTAMP, 8) AS STE_MIGRATIONDATE
	, B.STE_KPIEQPTFAILURE
	, B.STE_LINE
	, B.STE_MAINTENTITY
	, B.STE_MOVE_SWAP
	, B.STE_OPSEQPTFAILURE
	, B.STE_SERVICEAFFECT2
	, B.STE_SERVICEAFFECT5
	, B.STE_SUBSYSTEM
	, B.STE_SYSTEM
	, B.STE_TAR_REQ
	, B.STE_TSRIMPOSED
	, B.STE_TSRIMPOSEDDATE
	, B.STE_TSRLIFTED
	, B.STE_TSRLIFTEDDATE
	, B.STE_CANNIBALISED
	, B.STE_FROMMOBILE
	, B.STE_MANPWRWAIT
	, B.STE_ISTRAINRESTRICT
	, B.STE_CSWNACTIONAUTH
	, A.ACT_DESC AS STE_CSWNACTIONDESC
	, B.STE_CSWNAFCJRNUM
	, C.STE_CWEQCODE AS STE_CSWNEQPCODE
	, B.STE_CSWNIEXFL
	, B.STE_CSWNJBCLU
	, B.STE_CSWNJBCLUDESC
	, B.STE_CSWNJOBID
	, B.STE_CSWNPRJREF
	, B.STE_CSWNREQDESC
	, B.STE_CSWNREQUESTAUTH
	, B.STE_CSWNTOTCUMUNITS
	, B.STE_CSWNWOFNCTN
	, B.STE_CSWNWOID
	, B.STE_CSWNWOTYPE
	, B.STE_CSWNWOZONE
	, B.STE_CSWNCC
	, A.TIMESTAMP AS STE_MIGRATIONTS
	, C.STE_CSWNAUTHORITY AS STE_CSWNEQAUTHORITY
	, B.STE_REWORK
	, 0 AS INTERRUPTIBLE
FROM MAXIMO.CSWN_WOACTIVITY A
JOIN MAXIMO.WORKORDER B ON B.STE_MIGRATIONID=A.PK_WIP_WO
LEFT JOIN MAXIMO.ASSET C ON C.STE_MIGRATIONID=A.PK_EQP_TOPO
LEFT JOIN MAXIMO.ROUTES D ON D.STE_MIGRATIONID=A.PK_EQP_TOPO
JOIN (
	SELECT MAX(REPLACE(WONUM, 'WO', '')) AS MAX_WONUM FROM MAXIMO.WORKORDER WHERE WONUM LIKE 'WO%'
) X ON 1=1
JOIN (
	SELECT MAX(WORKORDERID) AS MAX_ID FROM MAXIMO.WORKORDER
) Y ON 1=1
LEFT JOIN MAXIMO.WORKORDER Z ON Z.WOCLASS='ACTIVITY' AND Z.STE_MIGRATIONID=PK_WIP_WA
WHERE Z.WORKORDERID IS NULL
;

-- UPDATE WONUM SEED
update maximo.autokey 
set seed=(SELECT MAX(REPLACE(WONUM, 'WO', '')) AS MAX_WONUM FROM MAXIMO.WORKORDER WHERE WONUM LIKE 'WO%')+1 
where autokeyname='WORKORDERNUM' and orgid='SBST';

-- UPDATE AUTOKEY
CALL MIGRATION.STE_UPDATE_SEQ('WORKORDERSEQ', 'WORKORDER', 'WORKORDERID');

CALL MIGRATION.STE_FINISH_PATCH('20250427-01-WOACTIVITY');