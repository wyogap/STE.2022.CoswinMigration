UPDATE MAXIMO.POLINE
SET
	VENDELIVERYDATE=COALESCE(REQDELIVERYDATE,VENDELIVERYDATE),
	REQDELIVERYDATE = NULL
WHERE STE_MIGRATIONID IS NOT NULL;

SELECT VENDELIVERYDATE FROM MAXIMO.POLINE WHERE VENDELIVERYDATE IS NOT NULL;

MERGE INTO MAXIMO.PO AS A
USING (
	SELECT p.POID, MAX(coalesce(l.VENDELIVERYDATE, l.REQDELIVERYDATE)) AS VENDELIVERYDATE
	FROM MAXIMO.PO p
	JOIN MAXIMO.POLINE l ON l.PONUM=p.PONUM 
	WHERE p.STE_MIGRATIONID IS NOT NULL
		AND coalesce(l.VENDELIVERYDATE, l.REQDELIVERYDATE) IS NOT NULL
	GROUP BY p.POID
) B ON B.POID=A.POID
WHEN MATCHED THEN
UPDATE SET
	VENDELIVERYDATE=B.VENDELIVERYDATE
;

UPDATE MAXIMO.PR SET STE_CSWNPRREF=COALESCE(STE_CSWNPRREF,PRNUM)
WHERE STE_MIGRATIONID IS NOT NULL;

UPDATE MAXIMO.RFQ SET STE_CSWNRFQREF=COALESCE(STE_CSWNRFQREF,RFQNUM)
WHERE STE_MIGRATIONID IS NOT NULL;

UPDATE MAXIMO.PO SET STE_CSWNPOREF=COALESCE(STE_CSWNPOREF,PONUM)
WHERE STE_MIGRATIONID IS NOT NULL;

MERGE INTO MAXIMO.RFQ A
USING (
	SELECT A.RFQID, A.STE_PONUM AS ORIGPONUM, MAX(B.PONUM) AS PONUM 
	FROM MAXIMO.RFQ A
	JOIN MAXIMO.RFQLINE B ON B.RFQNUM=A.RFQNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL
	GROUP BY A.RFQID, A.STE_PONUM
) B ON B.RFQID=A.RFQID
WHEN MATCHED THEN
UPDATE SET
	STE_PONUM=COALESCE(B.ORIGPONUM, B.PONUM)
;

-- PR TO PO RELATIONSHIP
MERGE INTO MAXIMO.PRLINE A
USING (
	SELECT D.PRLINEID, A.PONUM, A.REVISIONNUM, B.PRNUM, C.POLINENUM, C.POLINEID
		, ROW_NUMBER() OVER (PARTITION BY D.PRLINEID ORDER BY A.POID DESC) RN
	FROM MAXIMO.PO A
	JOIN MAXIMO.PR B ON B.STE_CSWNPRREF=A.STE_PRNUM
	JOIN MAXIMO.POLINE C ON C.PONUM=A.PONUM
	JOIN MAXIMO.PRLINE D ON D.PRNUM=B.PRNUM AND D.ITEMNUM=C.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL AND A.STE_PRNUM IS NOT NULL
		AND (A.STATUS!='CAN' AND B.STATUS!='CAN')
		AND NOT (B.STATUS='CLOSE' AND A.STATUS='WAPPR')
) B ON B.PRLINEID=A.PRLINEID AND B.RN=1
WHEN MATCHED THEN
UPDATE SET 
	PONUM=B.PONUM,
	POREVISIONNUM=B.REVISIONNUM,
	POLINENUM=B.POLINENUM,
	POLINEID=B.POLINEID
;

WITH DATA AS (
	SELECT D.PRLINEID, A.PONUM, A.REVISIONNUM, B.PRNUM, C.POLINENUM, C.POLINEID
		, ROW_NUMBER() OVER (PARTITION BY D.PRLINEID ORDER BY A.POID DESC) RN
		, A.STATUS AS POSTATUS, B.STATUS AS PRSTATUS
		, D.ITEMNUM, E.STE_CSWNITEMNO, E.DESCRIPTION, D.ORDERQTY AS PRQTY, C.ORDERQTY AS POQTY
	FROM MAXIMO.PO A
	JOIN MAXIMO.PR B ON B.STE_CSWNPRREF=A.STE_PRNUM
	JOIN MAXIMO.POLINE C ON C.PONUM=A.PONUM
	JOIN MAXIMO.PRLINE D ON D.PRNUM=B.PRNUM AND D.ITEMNUM=C.ITEMNUM
	LEFT JOIN MAXIMO.ITEM E ON E.ITEMNUM=C.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL AND A.STE_PRNUM IS NOT NULL
		AND (A.STATUS!='CAN' AND B.STATUS!='CAN')
		AND NOT (B.STATUS='CLOSE' AND A.STATUS='WAPPR')
)
SELECT 
	PRNUM, PRSTATUS, PRLINEID, ITEMNUM, STE_CSWNITEMNO, DESCRIPTION, PRQTY
	, RN, PONUM, POSTATUS, POLINENUM, POLINEID, POQTY
FROM DATA A
WHERE A.PRLINEID IN (SELECT DISTINCT PRLINEID FROM DATA WHERE RN>1)
ORDER BY PRNUM, PRLINEID, RN
;

-- PR TO RFQ RELATIONSHIP
MERGE INTO MAXIMO.PRLINE A
USING (
	SELECT D.PRLINEID, A.RFQNUM, B.PRNUM, C.RFQLINENUM, C.RFQLINEID
		, ROW_NUMBER() OVER (PARTITION BY D.PRLINEID 
			ORDER BY (CASE WHEN A.STATUS='COMP' THEN 1 ELSE 99 END) ASC, A.RFQID DESC) RN
	FROM MAXIMO.RFQ A
	JOIN MAXIMO.PR B ON B.STE_CSWNPRREF=A.STE_PRNUM
	JOIN MAXIMO.RFQLINE C ON C.RFQNUM=A.RFQNUM
	JOIN MAXIMO.PRLINE D ON D.PRNUM=B.PRNUM AND D.ITEMNUM=C.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL AND A.STE_PRNUM IS NOT NULL
		AND (A.STATUS!='CAN' AND B.STATUS!='CAN')
		AND NOT (B.STATUS='CLOSE' AND A.STATUS='INPRG')
) B ON B.PRLINEID=A.PRLINEID AND B.RN=1
WHEN MATCHED THEN
UPDATE SET 
	RFQNUM=B.RFQNUM,
	RFQLINENUM=B.RFQLINENUM,
	RFQLINEID=B.RFQLINEID
;

WITH DATA AS (
	SELECT D.PRLINEID, A.RFQNUM, B.PRNUM, C.RFQLINENUM, C.RFQLINEID
		, ROW_NUMBER() OVER (PARTITION BY D.PRLINEID 
			ORDER BY (CASE WHEN A.STATUS='COMP' THEN 1 ELSE 99 END) ASC, A.RFQID DESC) RN
		, A.STATUS AS RFQSTATUS, B.STATUS AS PRSTATUS, A.CLOSEONDATE
		, D.ITEMNUM, E.STE_CSWNITEMNO, E.DESCRIPTION, D.ORDERQTY AS PRQTY, C.ORDERQTY AS RFQQTY
	FROM MAXIMO.RFQ A
	JOIN MAXIMO.PR B ON B.STE_CSWNPRREF=A.STE_PRNUM
	JOIN MAXIMO.RFQLINE C ON C.RFQNUM=A.RFQNUM
	JOIN MAXIMO.PRLINE D ON D.PRNUM=B.PRNUM AND D.ITEMNUM=C.ITEMNUM
	LEFT JOIN MAXIMO.ITEM E ON E.ITEMNUM=C.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL AND A.STE_PRNUM IS NOT NULL
		AND (A.STATUS!='CAN' AND B.STATUS!='CAN')
		AND NOT (B.STATUS='CLOSE' AND A.STATUS='INPRG')
)
SELECT 
	PRNUM, PRSTATUS, PRLINEID, ITEMNUM, STE_CSWNITEMNO, DESCRIPTION, PRQTY
	, RN, RFQNUM, RFQSTATUS, RFQLINENUM, RFQLINEID, RFQQTY
FROM DATA A
WHERE A.PRLINEID IN (SELECT DISTINCT PRLINEID FROM DATA WHERE RN>1)
ORDER BY PRNUM, PRLINEID, RN
;

-- RFQ TO PO RELATIONSHIP
MERGE INTO MAXIMO.RFQLINE A
USING (
	SELECT C.RFQLINEID, A.RFQNUM, B.PONUM, B.REVISIONNUM, D.POLINENUM, D.POLINEID
		, ROW_NUMBER() OVER (PARTITION BY C.RFQLINEID ORDER BY B.POID DESC) RN
--		, A.STATUS AS RFQSTATUS, B.STATUS AS POSTATUS
--		, C.ITEMNUM, E.STE_CSWNITEMNO, E.DESCRIPTION, C.ORDERQTY AS RFQQTY, D.ORDERQTY AS POQTY
	FROM MAXIMO.RFQ A
	JOIN MAXIMO.PO B ON B.STE_CSWNPOREF=A.STE_PONUM
	JOIN MAXIMO.RFQLINE C ON C.RFQNUM=A.RFQNUM
	JOIN MAXIMO.POLINE D ON D.PONUM=B.PONUM AND D.ITEMNUM=C.ITEMNUM
	LEFT JOIN MAXIMO.ITEM E ON E.ITEMNUM=C.ITEMNUM
	WHERE A.STE_MIGRATIONID IS NOT NULL AND A.STE_PONUM IS NOT NULL
--		AND (A.STATUS!='CAN' AND B.STATUS!='CAN')
--		AND NOT (B.STATUS='CLOSE' AND A.STATUS='INPRG')
) B ON B.RFQLINEID=A.RFQLINEID AND B.RN=1
WHEN MATCHED THEN
UPDATE SET
	PONUM=B.PONUM,
	POREVISIONNUM=B.REVISIONNUM,
	POLINENUM=B.POLINENUM,
	POLINEID=B.POLINEID
;	

SELECT * FROM MAXIMO.RFQLINE WHERE RFQNUM='SY00076003001';

SELECT * FROM MAXIMO.POLINE WHERE PONUM='NS00002916';
